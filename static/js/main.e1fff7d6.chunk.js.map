{"version":3,"sources":["components/views/PlayField/PlayField.module.scss","components/common/FighterItem/FighterItem.module.scss","components/views/Menu/Menu.module.scss","components/base/Button/Button.module.scss","components/views/ChooseSquad/ChooseSquad.module.scss","components/views/GameEnd/GameEnd.module.scss","components/common/InGameTabs/InGameTabs.module.scss","components/common/SquadItem/SquadItem.module.scss","components/icons/Icons.module.scss","components/App.module.scss","components/common/ActivationToken/ActivationToken.module.scss","components/base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper.module.scss","components/base/Scroll/Scroll.module.scss","components/views/Cards/Cards.module.scss","components/base/Button/Button.tsx","store/settingsReducer.ts","components/views/Menu/Menu.jsx","utils/utils.ts","components/common/SquadItem/SquadItem.jsx","store/gameReducer.ts","components/views/ChooseSquad/ChooseSquad.tsx","components/views/GameEnd/GameEnd.jsx","components/icons/Icons.tsx","components/common/InGameTabs/InGameTabs.jsx","components/common/ActivationToken/ActivationToken.jsx","components/base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper.jsx","components/views/PlayField/PlayField.jsx","components/common/FighterItem/FighterItem.jsx","components/base/Scroll/Scroll.tsx","components/views/Cards/Cards.tsx","components/App.tsx","reportWebVitals.js","storage/localStorage.ts","store/saga.tsx","store/Store.tsx","i18n/i18n.js","index.tsx"],"names":["module","exports","Button","themeClassName","className","theme","restProps","classes","primary","secondary","third","classnames","root","disabled","initialState","language","settingsActions","type","Menu","t","useTranslation","dispatch","useDispatch","useSelector","settings","styles","onClick","to","ROUTES","CHOOSE_SQUAD","path","PLAY_FIELD","getActiveActivationTokens","activationTokens","filter","isActive","weedOutDeadCards","cards","healthPoints","makePublicUrl","url","process","makeImageIconUrl","name","makeImageFighterUrl","makeImageWarBandUrl","makeImageCardUrl","lang","SquadItem","color","icon","isFocused","style","backgroundColor","src","alt","currentRound","currentWarBand","rounds","isGameCanBeSaved","gameActions","roundIndex","index","newPropertyValues","data","payload","SKILL_NAMES","ChooseSquad","tWarBands","useState","focusedSquad","setFocusedSquad","squadElements","returnObjects","map","i","title","paper","items","bottom","GameEnd","game","cardLossesCount","reduce","accum","length","getCardLossesCount","gloryPointsWastedCount","gloryPoints","wasted","count","gloryPointsNotWastedCount","notWasted","MAIN","ImageButton","size","srcDisabled","srcHover","srcDefault","sizeClassName","tiny","InGameTabs","pathname","useLocation","CARDS","exact","ActivationToken","imageUrl","imageAlt","InnerBorderRadiusWrapper","children","PlayField","currentRoundObj","roundsCount","canIncreaseRound","canDecreaseRound","increaseGloryPointsNotWasted","decreaseGloryPointsNotWasted","onGloryPointsWastedClick","onGloryPointsNotWastedClick","updateGloryPoints","increase","updateRound","activationTokenElements","GAME_END","FighterItem","isDead","Scroll","Cards","canApplyDefenceOrDodge","canApplyMoveAndAttack","canApplyMove","canRevokeDefenceOrDodge","canRevokeAttack","canRevokeMove","canInspireCard","cardImageSrc","currentCardIndex","setCurrentCardIndex","isCardShownFullScreen","setIsCardShownFullScreen","activeActivationTokensCount","roundCards","onHpControlButtonClick","currentCardObj","applySkill","skillName","activationTokenActiveIndex","applied","revokeSkill","toggleCardFullScreen","description","isInspired","move","attack","defend","dodge","cardInspiredName","cardName","cardElements","iconName","top","characters","middle","card","left","actionButton","cardContainer","right","actions","cardFullScreenContainer","cardFullScreenTitle","cardFullScreenImageContainer","cardFullScreenDescription","App","i18n","tw","tf","warBands","fighters","currentWarBandFightersIds","currentWarBandFighters","id","includes","useEffect","changeLanguage","_","content","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","key","loadGame","localStorage","getItem","dataParsed","JSON","parse","err","saveGame","gameSaga","select","setItem","stringify","console","log","loadedData","storageManager","put","all","takeLatest","rootReducer","combineReducers","state","action","updateItemInArray","array","obj","stateRounds","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","use","HttpApi","LanguageDetector","init","ns","defaultNS","fallbackLng","debug","keySeparator","interpolation","escapeValue","formatSeparator","detection","order","lookupFromPathIndex","caches","cookieMinutes","lookupQuerystring","backend","loadPath","react","wait","i18next","Loading","ReactDOM","StrictMode","I18nextProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.e1fff7d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlayField_root__1NBq1\",\"top\":\"PlayField_top__15tpd\",\"buttonChangeRound\":\"PlayField_buttonChangeRound__230Fu\",\"round\":\"PlayField_round__1KHUt\",\"activationTokens\":\"PlayField_activationTokens__3nNgI\",\"statistics\":\"PlayField_statistics__3Y9a7\",\"gloryPointsControls\":\"PlayField_gloryPointsControls__3d-w8\",\"gloryPoints\":\"PlayField_gloryPoints__1g3p2\",\"gloryPoint\":\"PlayField_gloryPoint__3anpN\",\"bottom\":\"PlayField_bottom__39J6I\",\"buttonEndGame\":\"PlayField_buttonEndGame__1GtlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FighterItem_root__3fYUL\",\"focused\":\"FighterItem_focused__1fytl\",\"imageContainer\":\"FighterItem_imageContainer__2Ytdc\",\"dead\":\"FighterItem_dead__1VLcB\",\"imageIsDead\":\"FighterItem_imageIsDead__2J0jY\",\"imageFighter\":\"FighterItem_imageFighter__w_NNR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__15shr\",\"title\":\"Menu_title__1VVIM\",\"items\":\"Menu_items__3by7Z\",\"item\":\"Menu_item__1zdMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2-QVb\",\"primary\":\"Button_primary__FZqYg\",\"secondary\":\"Button_secondary__1_JU8\",\"third\":\"Button_third__3rmlg\",\"disabled\":\"Button_disabled__3vE9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChooseSquad_root__zMTP1\",\"title\":\"ChooseSquad_title__2vmE6\",\"paper\":\"ChooseSquad_paper__1YGzK\",\"items\":\"ChooseSquad_items__5WYYr\",\"bottom\":\"ChooseSquad_bottom__1ijla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GameEnd_root__2h6Qj\",\"title\":\"GameEnd_title__unVR0\",\"statistics\":\"GameEnd_statistics__3iA8j\",\"bottom\":\"GameEnd_bottom__PtfK7\",\"buttonAccept\":\"GameEnd_buttonAccept__wDaSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InGameTabs_root__3tNls\",\"button\":\"InGameTabs_button__1jr08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SquadItem_root__1GrLk\",\"focused\":\"SquadItem_focused__1dRd7\",\"imageContainer\":\"SquadItem_imageContainer__34L9E\",\"name\":\"SquadItem_name__3vZRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Icons_root__8nskU\",\"tiny\":\"Icons_tiny__2YyJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__2cDQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ActivationToken_root__18aDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InnerBorderRadiusWrapper_root__zTUsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Scroll_root__2WouV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Cards_root__3RkX3\",\"top\":\"Cards_top__3kvPN\",\"characters\":\"Cards_characters__2jjA-\",\"characterName\":\"Cards_characterName__1fnBW\",\"middle\":\"Cards_middle__aBXFe\",\"card\":\"Cards_card__2X5jI\",\"left\":\"Cards_left__1vuLh\",\"right\":\"Cards_right__1rR5w\",\"cardContainer\":\"Cards_cardContainer__35eFG\",\"actions\":\"Cards_actions__2fDA8\",\"healthPoints\":\"Cards_healthPoints__3gxwV\",\"bottom\":\"Cards_bottom__tFEIU\",\"cardFullScreenContainer\":\"Cards_cardFullScreenContainer__2Fmmf\",\"cardFullScreenImageContainer\":\"Cards_cardFullScreenImageContainer__2vNYv\",\"cardFullScreenTitle\":\"Cards_cardFullScreenTitle__3G8FE\",\"cardFullScreenDescription\":\"Cards_cardFullScreenDescription__1bqgV\"};","import React, {ButtonHTMLAttributes, FC} from 'react'\nimport classes from './Button.module.scss'\nimport classnames from 'classnames'\n\ntype Props = {\n  className?: string\n  theme?: 'primary' | 'secondary' | 'third'\n} & ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button: FC<Props> = ({\n                             className,\n                             theme = 'primary',\n                             ...restProps\n                           }) => {\n  let themeClassName\n\n  if (theme === 'primary') {\n    themeClassName = classes.primary\n  } else if (theme === 'secondary') {\n    themeClassName = classes.secondary\n  } else if (theme === 'third') {\n    themeClassName = classes.third\n  }\n\n  return (\n    <button\n      className={classnames(classes.root, themeClassName, className, {\n        [classes.disabled]: restProps.disabled\n      })}\n      {...restProps}\n    />\n  )\n}\n\nexport default Button","import {InferActionsTypes} from './Store'\n\nconst initialState: SettingsReducerState = {\n  language: \"ru\",\n}\n\nexport const settingsReducer = (state = initialState, action: ActionTypes): SettingsReducerState => {\n  switch (action.type) {\n    case 'SETTINGS-REDUCER/SET-LANGUAGE': {\n      return {\n        ...state,\n        language: action.language\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const settingsActions = {\n  setLanguage: (language: typeof initialState.language) => ({\n    type: 'SETTINGS-REDUCER/SET-LANGUAGE',\n    language\n  } as const),\n}\n\ntype ActionTypes = InferActionsTypes<typeof settingsActions>\n\nexport type SettingsReducerState = {\n  language: \"en\" | \"ru\"\n};","import React from 'react'\nimport * as styles from \"./Menu.module.scss\";\nimport Button from \"../../base/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport {useTranslation} from 'react-i18next'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {settingsActions} from '../../../store/settingsReducer'\n\nconst Menu = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const { language } = useSelector(({settings}) => settings)\n\n  const onButtonToggleLanguageClick = () => {\n    dispatch(settingsActions.setLanguage(\n      (language === 'ru') ? 'en' : 'ru'\n    ))\n  };\n\n  return (\n    <div className={styles.root}>\n      <Button theme=\"secondary\" onClick={onButtonToggleLanguageClick}>{language}</Button>\n      <div className={styles.items}>\n        <div className={styles.title}>{t(\"welcome\")}</div>\n        <Link to={ROUTES.CHOOSE_SQUAD.path} className={styles.item}><Button>{t(\"startGame\")}</Button></Link>\n        <Link to={ROUTES.PLAY_FIELD.path} className={styles.item}><Button>{t(\"continue\")}</Button></Link>\n      </div>\n    </div>\n  )\n};\n\nexport default Menu;","import {ActivationToken, Card} from '../store/gameReducer'\n\nexport const getActiveActivationTokensCount = (activationTokens: ActivationToken[]) => {\n  return getActiveActivationTokens(activationTokens).length;\n};\n\nexport const getActiveActivationTokens = (activationTokens: ActivationToken[] = []) => {\n  return activationTokens.filter(({isActive}) => isActive);\n};\n\nexport const getCardLossesCount = (cards: Card[]) => {\n  return cards.length - weedOutDeadCards(cards).length;\n};\n\nexport const weedOutDeadCards = (cards: Card[]) => {\n  return cards.filter(({healthPoints}) => {\n    return !!healthPoints;\n  });\n};\n\nexport const makePublicUrl = (url: string) => process.env.PUBLIC_URL + url;\nexport const makeImageIconUrl = (name: string) => makePublicUrl(`/images/icons/${name}.png`);\nexport const makeImageFighterUrl = (name: string) => makePublicUrl(`/images/fighters/${name}.png`);\nexport const makeImageWarBandUrl = (name: string) => makePublicUrl(`/images/war-bands/${name}.png`);\nexport const makeImageCardUrl = (name: string, lang: \"en\" | \"ru\") => makePublicUrl(`/images/cards/${lang}/${name}.jpg`);\n","import React from \"react\";\nimport * as styles from \"./SquadItem.module.scss\";\nimport * as classnames from 'classnames'\nimport {makeImageWarBandUrl} from '../../../utils/utils'\n\nconst SquadItem = ({name, color, icon, className = \"\", isFocused, ...restProps}) => {\n  return (\n    <div\n      className={classnames(styles.root, className, {\n        [styles.focused]: isFocused\n      })}\n      {...restProps}\n    >\n      <div style={{backgroundColor: color}} className={styles.imageContainer}>\n        <img src={makeImageWarBandUrl(icon)} alt={name} />\n      </div>\n      {/*<p className={styles.name}>{name}</p>*/}\n    </div>\n  )\n};\n\nexport default SquadItem;","import {InferActionsTypes} from './Store'\nimport {SaveGameType} from '../storage/localStorage'\n\nconst initialState: GameReducerState = {\n  currentRound: 0,\n  currentWarBand: 0,\n  rounds: [],\n  isGameCanBeSaved: false\n}\n\nexport const gameReducer = (state = initialState, action: ActionTypes): GameReducerState => {\n  const updateItemInArray = <T>(array: T[], index: number, newPropertyValues: Partial<T>): T[] => {\n    return array.map((obj: T, i) => {\n      if (i === index) {\n        obj = {\n          ...obj,\n          ...newPropertyValues\n        }\n      }\n\n      return obj\n    })\n  }\n\n  switch (action.type) {\n    case 'GAME-REDUCER/SET-rounds': {\n      return {\n        ...state,\n        rounds: [\n          ...action.rounds\n        ]\n      }\n    }\n    case 'GAME-REDUCER/SET-CURRENT-ROUND': {\n      return {\n        ...state,\n        currentRound: action.payload\n      }\n    }\n    case 'GAME-REDUCER/SET-CURRENT-WAR-BAND': {\n      return {\n        ...state,\n        currentWarBand: action.payload\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-ROUND': {\n      const {index, newPropertyValues} = action.data\n\n      return {\n        ...state,\n        rounds: [\n          ...updateItemInArray<Round>(state.rounds, index, newPropertyValues)\n        ]\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-CARD': {\n      const {roundIndex, index, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].cards = [\n        ...updateItemInArray<Card>(stateRounds[roundIndex].cards, index, newPropertyValues)\n      ]\n\n      return {\n        ...state,\n        rounds: stateRounds,\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-ACTIVATION-TOKEN': {\n      const {roundIndex, index, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].activationTokens = [\n        ...updateItemInArray<ActivationToken>(stateRounds[roundIndex].activationTokens, index, newPropertyValues)\n      ]\n\n      return {\n        ...state,\n        rounds: stateRounds\n      }\n    }\n    case 'GAME-REDUCER/SET-GLORY-POINTS': {\n      const {roundIndex, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].gloryPoints = {\n        ...stateRounds[roundIndex].gloryPoints,\n        ...newPropertyValues\n      }\n\n      return {\n        ...state,\n        rounds: stateRounds\n      }\n    }\n    case 'GAME-REDUCER/RESET-GAME': {\n      return {\n        ...initialState\n      }\n    }\n    case 'GAME-REDUCER/LOAD-GAME-SUCCESS': {\n      return {\n        ...initialState,\n        rounds: action.data?.rounds,\n        currentWarBand: action.data?.currentWarBand,\n        currentRound: action.data?.currentRound,\n        isGameCanBeSaved: true\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const gameActions = {\n  setRounds: (rounds: typeof initialState.rounds) => ({\n    type: 'GAME-REDUCER/SET-rounds',\n    rounds\n  } as const),\n  updateRound: (index: number, newPropertyValues: Partial<Round>) => ({\n    type: 'GAME-REDUCER/UPDATE-ROUND',\n    data: {index, newPropertyValues}\n  } as const),\n  updateCard: (roundIndex: number, index: number, newPropertyValues: Partial<Card>) => ({\n    type: 'GAME-REDUCER/UPDATE-CARD',\n    data: {roundIndex, index, newPropertyValues}\n  } as const),\n  updateActivationToken: (roundIndex: number, index: number, newPropertyValues: Partial<ActivationToken>) => ({\n    type: 'GAME-REDUCER/UPDATE-ACTIVATION-TOKEN',\n    data: {roundIndex, index, newPropertyValues}\n  } as const),\n  setCurrentRound: (payload: number) => ({\n    type: 'GAME-REDUCER/SET-CURRENT-ROUND',\n    payload\n  } as const),\n  setCurrentWarBand: (payload: number) => ({\n    type: 'GAME-REDUCER/SET-CURRENT-WAR-BAND',\n    payload\n  } as const),\n  updateGloryPoints: (roundIndex: number, newPropertyValues: Partial<GloryPoints>) => ({\n    type: 'GAME-REDUCER/SET-GLORY-POINTS',\n    data: {roundIndex, newPropertyValues}\n  } as const),\n  resetGame: () => ({\n    type: 'GAME-REDUCER/RESET-GAME',\n  } as const),\n  loadGame: (data: SaveGameType) => ({\n    type: 'GAME-REDUCER/LOAD-GAME'\n  } as const),\n  loadGameSuccess: (data: SaveGameType) => ({\n    type: 'GAME-REDUCER/LOAD-GAME-SUCCESS',\n    data\n  } as const),\n  saveGame: () => ({\n    type: 'GAME-REDUCER/SAVE-GAME',\n  } as const),\n}\n\ntype ActionTypes = InferActionsTypes<typeof gameActions>\n\nexport type GameReducerState = {\n  currentRound: number\n  currentWarBand: number\n  rounds: Round[]\n  isGameCanBeSaved: boolean\n};\n\nexport type Round = {\n  activationTokens: ActivationToken[]\n  cards: Card[]\n  gloryPoints: GloryPoints\n}\n\nexport type ActivationToken = {\n  isActive: boolean\n}\n\nexport const SKILL_NAMES = {\n  MOVE: \"move\",\n  ATTACK: \"attack\",\n  DEFEND: \"defend\",\n  DODGE: \"dodge\"\n} as const\n\nexport type ValueOf<T> = T[keyof T];\nexport type SkillName = ValueOf<typeof SKILL_NAMES>\n\nexport type Card = {\n  healthPoints: number\n  name: string\n  iconName: string\n  cardInspiredName: string\n  cardName: string\n  description: string\n  isInspired: boolean\n  [SKILL_NAMES.MOVE]: Skill\n  [SKILL_NAMES.ATTACK]: Skill\n  [SKILL_NAMES.DEFEND]: Skill\n  [SKILL_NAMES.DODGE]: Skill\n}\n\nexport type GloryPoints = {\n  wasted: {\n    count: number\n  },\n  notWasted: {\n    count: number\n  }\n}\n\nexport type Skill = {\n  applied: boolean\n}","import React, {useState} from \"react\";\nimport classes from \"./ChooseSquad.module.scss\";\nimport SquadItem from \"../../common/SquadItem/SquadItem\";\nimport Button from \"../../base/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport {useTranslation} from 'react-i18next'\nimport {useDispatch} from 'react-redux'\nimport {gameActions} from '../../../store/gameReducer'\n\nconst ChooseSquad = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const { t: tWarBands } = useTranslation(\"warBands\")\n  const [focusedSquad, setFocusedSquad] = useState(0);\n  const bandItems: any[] = tWarBands(\"items\", { returnObjects: true })\n\n\n  const handleAcceptChooseClick = () => {\n    // dispatch(gameActions.resetGame())\n  }\n\n  const squadElements = bandItems.map(({name, icon, color}, i) => {\n    return <SquadItem\n      name={name}\n      icon={icon}\n      color={color}\n      key={`war-band-${i}`}\n      isFocused={focusedSquad === i}\n      onClick={() => {\n        setFocusedSquad(i);\n        dispatch(gameActions.setCurrentWarBand(i))\n      }}\n    />\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{t(\"chooseSquad\")}</div>\n      <div className={classes.paper}>\n        <div className={classes.items}>\n          {squadElements}\n        </div>\n        <div className={classes.bottom}>\n          <Link to={ROUTES.PLAY_FIELD.path}><Button onClick={handleAcceptChooseClick}>{t(\"acceptChoose\")}</Button></Link>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default ChooseSquad;","import React from 'react'\nimport * as styles from \"./GameEnd.module.scss\";\nimport Button from \"../../base/Button/Button\";\nimport {ROUTES} from \"../../App\";\nimport {Link} from \"react-router-dom\";\nimport {getCardLossesCount} from '../../../utils/utils'\nimport {useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\n\nconst GameEnd = () => {\n  const { t } = useTranslation()\n  const {\n    rounds,\n  } = useSelector(({game}) => game);\n\n  const cardLossesCount = rounds.reduce((accum, {cards}) => {\n    return accum + getCardLossesCount(cards);\n  }, 0);\n  const gloryPointsWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.wasted.count;\n  }, 0);\n  const gloryPointsNotWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.notWasted.count;\n  }, 0);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{t(\"gameEnd\")}</div>\n      <div className={styles.statistics}>\n        <table>\n          <thead>\n          <tr>\n            <td>{t(\"gloryPointTokens\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{t(\"notWasted\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          <tr>\n            <td>{t(\"wasted\")}</td>\n            <td>{gloryPointsWastedCount}</td>\n          </tr>\n          </tbody>\n          <thead>\n          <tr>\n            <td>{t(\"fightersInTheSquad\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{t(\"casualties\")}</td>\n            <td>{cardLossesCount}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className={styles.bottom}>\n        <Link to={ROUTES.MAIN.path}><Button className={styles.buttonAccept}>{t(\"accept\")}</Button></Link>\n      </div>\n    </div>\n  )\n};\n\nexport default GameEnd;","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react'\nimport classes from './Icons.module.scss'\nimport classnames from 'classnames'\nimport {makeImageIconUrl} from '../../utils/utils'\n\ntype ImageButtonProps = {\n  size?: \"tiny\" | undefined\n  srcDisabled?: string\n  srcHover?: string\n  srcDefault: string\n} & DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\nconst ImageButton: FC<ImageButtonProps> = ({\n                                             size,\n                                             srcDisabled,\n                                             srcHover,\n                                             srcDefault,\n                                             className,\n                                             ...restProps\n                                           }) => {\n  let sizeClassName = \"\";\n\n  if (size === \"tiny\") {\n    sizeClassName = classes.tiny\n  }\n\n  return (\n    <button\n      className={classnames(classes.root, className, sizeClassName)}\n      style={{\n        // @ts-ignore\n        '--src-disabled': `url(\"${makeImageIconUrl(srcDisabled || srcDefault)}\")`,\n        '--src-hover': `url(\"${makeImageIconUrl(srcHover || srcDefault)}\")`,\n        '--src-default': `url(\"${makeImageIconUrl(srcDefault)}\")`\n      }}\n      {...restProps}\n    />\n  )\n}\n\nexport default ImageButton","import React from 'react'\nimport * as styles from './InGameTabs.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport {ROUTES} from '../../App'\nimport ImageButton from '../../icons/Icons'\nimport {useLocation} from 'react-router'\n\nconst InGameTabs = () => {\n  const {pathname} = useLocation()\n  return (\n    <div className={styles.root}>\n      <NavLink to={ROUTES.CARDS.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_selected_hero\"\n          srcHover=\"ic_menu_selected_hero_active\"\n          srcDisabled=\"ic_menu_selected_hero_active\"\n          disabled={pathname === ROUTES.CARDS.path}\n        />\n      </NavLink>\n      <NavLink to={ROUTES.PLAY_FIELD.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_game_score\"\n          srcHover=\"ic_menu_game_score_active\"\n          srcDisabled=\"ic_menu_game_score_active\"\n          disabled={pathname === ROUTES.PLAY_FIELD.path}\n        />\n      </NavLink>\n      <NavLink exact to={ROUTES.MAIN.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_save_and_exit\"\n          disabled={pathname === ROUTES.MAIN.path}\n        />\n      </NavLink>\n    </div>\n  )\n}\n\nexport default InGameTabs","import React from \"react\";\nimport * as styles from \"./ActivationToken.module.scss\";\nimport {makeImageIconUrl, makePublicUrl} from '../../../utils/utils'\nimport * as classnames from 'classnames'\n\nconst ActivationToken = ({className = \"\", isActive = false, ...restProps}) => {\n  let imageUrl, imageAlt\n\n  if (isActive) {\n    imageUrl = makeImageIconUrl('ic_activation_token')\n    imageAlt = \"Activation token active\"\n  } else {\n    imageUrl = makeImageIconUrl('ic_activation_token_spent')\n    imageAlt = \"Activation token spent\"\n  }\n\n  return (\n    <div className={classnames(styles.root, className)} {...restProps}>\n      <img src={imageUrl} alt={imageAlt}/>\n    </div>\n  )\n};\n\nexport default ActivationToken;","import React from \"react\";\nimport * as styles from \"./InnerBorderRadiusWrapper.module.scss\";\nimport * as classnames from 'classnames'\n\nconst InnerBorderRadiusWrapper = ({className, children, ...restProps}) => {\n  return (\n    <div className={classnames(styles.root, className)} {...restProps}>\n        {children}\n    </div>\n  )\n};\n\nexport default InnerBorderRadiusWrapper;","import React, {useEffect} from 'react'\nimport * as styles from \"./PlayField.module.scss\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport InGameTabs from \"../../common/InGameTabs/InGameTabs\";\nimport Button from '../../base/Button/Button'\nimport ActivationToken from '../../common/ActivationToken/ActivationToken'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { useTranslation } from 'react-i18next';\nimport InnerBorderRadiusWrapper from '../../base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper'\nimport {gameActions} from '../../../store/gameReducer'\nimport ImageButton from '../../icons/Icons'\nimport {makeImageIconUrl} from '../../../utils/utils'\n\nconst PlayField = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const {rounds} = useSelector(({game}) => game);\n  const {currentRound} = useSelector(({game}) => game);\n\n  const currentRoundObj = rounds[currentRound];\n  const roundsCount = rounds.length;\n  const activationTokens = currentRoundObj?.activationTokens;\n\n  const canIncreaseRound = currentRound < roundsCount - 1;\n  const canDecreaseRound = currentRound > 0;\n\n  const gloryPointsWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.wasted.count;\n  }, 0);\n  const gloryPointsNotWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.notWasted.count;\n  }, 0);\n\n  const increaseGloryPointsWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        wasted: {\n          count: gloryPointsWastedCount + 1\n        }\n      })\n    );\n  }\n  const decreaseGloryPointsWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        wasted: {\n          count: gloryPointsWastedCount - 1\n        }\n      })\n    );\n  }\n  const increaseGloryPointsNotWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        notWasted: {\n          count: gloryPointsNotWastedCount + 1\n        }\n      })\n    );\n  }\n  const decreaseGloryPointsNotWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        notWasted: {\n          count: gloryPointsNotWastedCount - 1\n        }\n      })\n    );\n  }\n\n  const onGloryPointsWastedClick = () => {\n    if (gloryPointsWastedCount) {\n      decreaseGloryPointsWasted()\n      increaseGloryPointsNotWasted()\n    }\n  };\n\n  const onGloryPointsNotWastedClick = () => {\n    if (gloryPointsNotWastedCount) {\n      decreaseGloryPointsNotWasted()\n      increaseGloryPointsWasted()\n    }\n  };\n\n  const updateGloryPoints = (increase = true) => {\n    if (increase) {\n      increaseGloryPointsNotWasted()\n    } else {\n      decreaseGloryPointsNotWasted()\n    }\n  };\n\n  const updateRound = (increase) => {\n    if (increase) {\n      if (canIncreaseRound) {\n        dispatch(gameActions.setCurrentRound(currentRound + 1));\n      }\n    } else {\n      if (canDecreaseRound) {\n        dispatch(gameActions.setCurrentRound(currentRound - 1));\n      }\n    }\n  };\n\n  const activationTokenElements = activationTokens?.map(({isActive}, i) => (\n    <ActivationToken\n      onClick={() => {\n        dispatch(gameActions.updateActivationToken(currentRound, i, {\n          isActive: !isActive\n        }))\n      }}\n      key={i}\n      isActive={isActive}\n    />\n  ));\n\n  return (\n    <div className={styles.root}>\n\n      <div className={styles.top}>\n        <ImageButton\n          className={styles.buttonChangeRound}\n          srcDefault=\"ic_previous_round\"\n          srcHover=\"ic_previous_round_pressed\"\n          srcDisabled=\"ic_previous_round_inactive\"\n          disabled={!canDecreaseRound}\n          onClick={() => updateRound(false)}\n        />\n        <InnerBorderRadiusWrapper className={styles.round}>\n          <span>{t(\"round\")} {currentRound + 1}</span>\n        </InnerBorderRadiusWrapper>\n        <ImageButton\n          className={styles.buttonChangeRound}\n          srcDefault=\"ic_next_round\"\n          srcHover=\"ic_next_round_pressed\"\n          srcDisabled=\"ic_next_round_inactive\"\n          disabled={!canIncreaseRound}\n          onClick={() => updateRound(true)}\n        />\n      </div>\n\n      <div className={styles.activationTokens}>\n        {activationTokenElements}\n      </div>\n\n      <div className={styles.statistics}>\n        <div className={styles.gloryPointsControls}>\n          <Button\n            theme=\"secondary\"\n            onClick={() => {\n              updateGloryPoints(true);}\n            }\n          >+</Button>\n          <Button\n            theme=\"secondary\"\n            disabled={!gloryPointsNotWastedCount}\n            onClick={() => {\n              updateGloryPoints(false);}\n            }\n          >-</Button>\n        </div>\n        <div className={styles.gloryPoints}>\n          <Button\n            disabled={!gloryPointsNotWastedCount}\n            className={styles.gloryPoint}\n            onClick={() => {\n              onGloryPointsNotWastedClick();\n            }}\n          >\n            <img\n              src={makeImageIconUrl(\"ic_glory_point\")}\n              alt={`${t(\"gloryPointTokens\")} {t(\"wasted\")}`}\n            />\n            {gloryPointsNotWastedCount}</Button>\n          <Button\n            disabled={!gloryPointsWastedCount}\n            className={styles.gloryPoint}\n            onClick={() => {\n              onGloryPointsWastedClick(false);\n            }}\n          >\n            <img\n              src={makeImageIconUrl(\"ic_glory_point_spent\")}\n              alt={`${t(\"gloryPointTokens\")} {t(\"notWasted\")}`}\n            />\n            {gloryPointsWastedCount}\n          </Button>\n        </div>\n      </div>\n\n      <div className={styles.bottom}>\n        <Link to={ROUTES.GAME_END.path} className={styles.buttonEndGame}><Button theme=\"third\">{t(\"endGame\")}</Button></Link>\n        <InGameTabs/>\n      </div>\n\n    </div>\n  )\n};\n\nexport default PlayField;","import React from \"react\";\nimport * as styles from \"./FighterItem.module.scss\";\nimport * as classnames from 'classnames'\nimport {makeImageFighterUrl, makeImageIconUrl} from '../../../utils/utils'\n\nconst FighterItem = ({name, isDead, icon, className = \"\", isFocused, ...restProps}) => {\n  return (\n    <div\n      className={classnames(styles.root, className, {\n        [styles.focused]: isFocused,\n        [styles.dead]: isDead\n      })}\n      {...restProps}\n    >\n      <div className={styles.imageContainer}>\n        <img className={styles.imageFighter} src={makeImageFighterUrl(icon)} alt={name} />\n        <img className={styles.imageIsDead} src={makeImageIconUrl(\"ic_fighter_is_dead\")} alt=\"Is dead\"/>\n      </div>\n    </div>\n  )\n};\n\nexport default FighterItem;","import React, {FC, HTMLAttributes} from 'react'\nimport classes from './Scroll.module.scss'\nimport classnames from 'classnames'\n\ntype Props = {\n  className?: string\n} & HTMLAttributes<HTMLDivElement>\n\nconst Scroll: FC<Props> = ({className, ...restProps}) => {\n  return (\n    <div\n      className={classnames(classes.root, className)}\n      {...restProps}\n    />\n  )\n}\n\nexport default Scroll","import React, {useEffect, useState} from 'react'\nimport classes from './Cards.module.scss'\nimport Button from '../../base/Button/Button'\nimport InGameTabs from '../../common/InGameTabs/InGameTabs'\nimport {getActiveActivationTokens, makeImageCardUrl} from '../../../utils/utils'\nimport {Card, gameActions, SKILL_NAMES, SkillName} from '../../../store/gameReducer'\nimport FighterItem from '../../common/FighterItem/FighterItem'\nimport ImageButton from '../../icons/Icons'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\nimport Scroll from '../../base/Scroll/Scroll'\n\nconst Cards = () => {\n  const dispatch = useDispatch()\n  const {rounds, currentRound, currentWarBand: currentWarBandIndex} = useSelector(({game}) => game)\n  const {language} = useSelector(({settings}) => settings)\n  const [currentCardIndex, setCurrentCardIndex] = useState(0)\n  const [isCardShownFullScreen, setIsCardShownFullScreen] = useState(false)\n\n  const currentRoundObj = rounds[currentRound]\n  const activationTokens = currentRoundObj?.activationTokens\n  const activeActivationTokens = getActiveActivationTokens(activationTokens)\n  const activeActivationTokensCount = activeActivationTokens.length\n\n  const roundCards: Card[] = rounds[currentRound]?.cards || []\n\n  const onHpControlButtonClick = (increase = true) => {\n    if (increase) {\n      dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n        healthPoints: currentCardObj?.healthPoints + 1\n      }))\n    } else {\n      const {healthPoints} = currentCardObj\n\n      if (healthPoints) {\n        dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n          healthPoints: healthPoints - 1\n        }))\n      }\n    }\n  }\n\n  const applySkill = (skillName: SkillName) => {\n    if (activeActivationTokensCount) {\n      dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n        [skillName]: {\n          applied: true\n        }\n      }))\n\n      let activationTokenActiveIndex\n\n      for (let i = activationTokens.length - 1, length = 0; i >= length; i--) {\n        if (activationTokens[i].isActive) {\n          activationTokenActiveIndex = i\n          break\n        }\n      }\n\n      if (activationTokenActiveIndex) {\n        dispatch(gameActions.updateActivationToken(\n          currentRound,\n          activationTokenActiveIndex,\n          {isActive: false})\n        )\n      }\n    }\n  }\n  const revokeSkill = (skillName: SkillName) => {\n    dispatch(\n      gameActions.updateCard(currentRound, currentCardIndex, {\n        [skillName]: false\n      })\n    )\n  }\n\n  const setCurrentCardInspireStatus = (flag: boolean) => {\n    dispatch(\n      gameActions.updateCard(currentRound, currentCardIndex, {\n        isInspired: flag\n      })\n    )\n  }\n\n  const toggleCardFullScreen = () => {\n    setIsCardShownFullScreen(!isCardShownFullScreen)\n  }\n\n  const currentCardObj: Card = roundCards[currentCardIndex]\n  let canApplyDefenceOrDodge\n  let canApplyMoveAndAttack\n  let canApplyMove\n  let canRevokeDefenceOrDodge\n  let canRevokeAttack\n  let canRevokeMove\n  let canInspireCard\n  let cardImageSrc\n  let name = \"\"\n  let description = \"\"\n  let isInspired = false\n\n  if (currentCardObj) {\n    const {move, attack, defend, dodge } = currentCardObj\n\n    canApplyDefenceOrDodge = activeActivationTokensCount && !defend.applied\n      && !dodge.applied && !attack.applied && !move.applied\n    canApplyMoveAndAttack = activeActivationTokensCount && !attack.applied && !move.applied\n    canApplyMove = activeActivationTokensCount && !attack.applied && !move.applied\n    canRevokeDefenceOrDodge = defend.applied && dodge.applied\n    canRevokeAttack = attack.applied\n    canRevokeMove = move.applied\n    canInspireCard = currentCardObj.cardInspiredName !== \"none\";\n\n    name = currentCardObj.name\n    description = currentCardObj.description\n    isInspired = currentCardObj.isInspired\n\n    if (isInspired) {\n      cardImageSrc = makeImageCardUrl(currentCardObj.cardInspiredName, language)\n    } else {\n      cardImageSrc = makeImageCardUrl(currentCardObj.cardName, language)\n    }\n  }\n  \n  const cardElements = roundCards.map(({iconName, name, healthPoints, isInspired}: any, i: number) => {\n    return <FighterItem\n      isDead={!healthPoints}\n      key={`fighter-${i}`}\n      name={name}\n      icon={iconName}\n      isFocused={currentCardIndex === i}\n      onClick={() => {\n        setCurrentCardIndex(i)\n      }}\n    />\n  })\n\n  return (\n    <div className={classes.root}>\n\n      <div className={classes.top}>\n        <div className={classes.characters}>\n          {cardElements}\n        </div>\n      </div>\n\n      <div className={classes.middle}>\n        {\n          (currentCardObj)\n            ? <>\n              <div className={classes.card}>\n                <div className={classes.left}>\n                  <Button theme=\"secondary\" disabled={!canInspireCard} onClick={() => {\n                    setCurrentCardInspireStatus(!isInspired)\n                  }}>\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      disabled={!canInspireCard}\n                      srcDisabled=\"ic_condition_inspired_inactive\"\n                      srcDefault={\n                        (isInspired)\n                          ? \"ic_condition_inspired_active\"\n                          : \"ic_condition_inspired\"\n                      }\n                    />\n                  </Button>\n                  <Button theme=\"secondary\"\n                          disabled={!canRevokeMove && !canRevokeAttack}\n                          onClick={() => {\n                            revokeSkill(SKILL_NAMES.MOVE)\n                            revokeSkill(SKILL_NAMES.ATTACK)\n                          }}\n                  >\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault={\n                        (canRevokeMove && canRevokeAttack)\n                          ? 'ic_condition_out_of_actions_active'\n                          : 'ic_condition_out_of_moves_active'}\n                      srcDisabled=\"ic_condition_out_of_actions\"\n                      disabled={!canRevokeMove && !canRevokeAttack}\n                    />\n                  </Button>\n                  <Button theme=\"secondary\"\n                          disabled={!canRevokeDefenceOrDodge}\n                          onClick={() => {\n                            revokeSkill(SKILL_NAMES.DEFEND)\n                            revokeSkill(SKILL_NAMES.DODGE)\n                          }}\n                  >\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault=\"ic_condition_on_defensive_active\"\n                      srcDisabled=\"ic_condition_on_defensive\"\n                      disabled={!canRevokeDefenceOrDodge}\n                    />\n                  </Button>\n                </div>\n                <div className={classes.cardContainer}>\n                  <img onClick={toggleCardFullScreen} src={cardImageSrc} alt={name}/>\n                </div>\n                <div className={classes.right}>\n                  <Button\n                    onClick={() => {\n                      onHpControlButtonClick(true)\n                    }}\n                    theme=\"secondary\"\n                  >+</Button>\n                  <div className={classes.healthPoints}>{currentCardObj.healthPoints}</div>\n                  <Button\n                    disabled={!currentCardObj.healthPoints}\n                    onClick={() => {\n                      onHpControlButtonClick(false)\n                    }}\n                    theme=\"secondary\"\n                  >-</Button>\n                </div>\n              </div>\n              <div className={classes.actions}>\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_action_defense\"\n                  srcDisabled=\"ic_activation_is_forbidden\"\n                  disabled={!canApplyDefenceOrDodge}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.DEFEND)\n                    applySkill(SKILL_NAMES.DODGE)\n                  }}\n                />\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_condition_out_of_actions\"\n                  srcDisabled=\"ic_action_attack_forbidden\"\n                  disabled={!canApplyMoveAndAttack}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.MOVE)\n                    applySkill(SKILL_NAMES.ATTACK)\n                  }}\n                />\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_moves\"\n                  srcDisabled=\"ic_action_movement\"\n                  disabled={!canApplyMove}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.MOVE)\n                  }}\n                />\n              </div>\n            </>\n            : ''\n        }\n      </div>\n\n      <div className={classes.bottom}>\n        <InGameTabs/>\n      </div>\n\n      {\n        (isCardShownFullScreen)\n          ? (\n            <div className={classes.cardFullScreenContainer}>\n              <div className={classes.cardFullScreenTitle}>{name}</div>\n              <div className={classes.cardFullScreenImageContainer}>\n                <img onClick={toggleCardFullScreen} src={cardImageSrc} alt={name}/>\n              </div>\n              <Scroll>\n                <p className={classes.cardFullScreenDescription}>{description}</p>\n              </Scroll>\n            </div>\n          )\n          : ''\n      }\n    </div>\n  )\n}\n\nexport default Cards\n\nexport type WarBand = {\n  name: string\n  icon: string\n  description: string\n  fighters: number[]\n}\n\nexport type Fighter = {\n  name: string\n  fighters: number[]\n  iconName: string\n  cardName: string\n  description: string\n  cardInspiredName: string\n  descriptionInspired: string\n  healthPoints: number\n  defenceStyle: string\n  movementDistance: number\n  defenceValue: number\n  nameInspired: string\n  movementDistanceInspired: number\n  defenceValueInspired: number\n  id: number\n}","import React, {useEffect} from 'react'\nimport classes from './App.module.scss'\nimport Menu from './views/Menu/Menu'\nimport ChooseSquad from './views/ChooseSquad/ChooseSquad'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport GameEnd from './views/GameEnd/GameEnd'\nimport PlayField from './views/PlayField/PlayField'\nimport Cards, {Fighter, WarBand} from './views/Cards/Cards'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\nimport {gameActions} from '../store/gameReducer'\n\nexport const ROUTES = {\n  MAIN: {\n    path: '/'\n  },\n  CHOOSE_SQUAD: {\n    path: '/choose-squad'\n  },\n  GAME_END: {\n    path: '/game-end'\n  },\n  PLAY_FIELD: {\n    path: '/play-field'\n  },\n  CARDS: {\n    path: '/cards'\n  }\n}\n\nfunction App() {\n  const dispatch = useDispatch()\n  const {i18n} = useTranslation()\n  const { t: tw } = useTranslation(\"warBands\")\n  const { t: tf } = useTranslation(\"fighters\")\n  const warBands: WarBand[] = tw(\"items\", { returnObjects: true })\n  const fighters: Fighter[] = tf(\"items\", { returnObjects: true })\n  const {language} = useSelector(({settings}) => settings)\n  // Get fighters of the current war band.\n  const {currentWarBand: currentWarBandIndex} = useSelector(({game}) => game)\n  const currentWarBand = warBands[currentWarBandIndex];\n  const currentWarBandFightersIds = currentWarBand.fighters;\n  const currentWarBandFighters = fighters.filter(({id}) => {\n    return currentWarBandFightersIds.includes(id)\n  })\n  //\n\n  useEffect(() => {\n    i18n.changeLanguage(language)\n  }, [language])\n\n  // Update rounds object (game at all in short speak) when current war band is changed.\n  useEffect(() => {\n    const rounds = [0, 0, 0]\n    dispatch(gameActions.setRounds(rounds.map((_) => ({\n      activationTokens: [\n        {isActive: true},\n        {isActive: true},\n        {isActive: true},\n        {isActive: true}\n      ],\n      cards: currentWarBandFighters.map(({id,\n                                           name,\n                                           healthPoints,\n                                           iconName,\n                                           cardInspiredName,\n                                           cardName,\n                                           description}) => {\n        return  {\n          id,\n          name,\n          healthPoints,\n          iconName,\n          cardInspiredName,\n          cardName,\n          description,\n          isInspired: false,\n          move: {applied: false},\n          attack: {applied: false},\n          defend: {applied: false},\n          dodge: {applied: false}\n        }\n      }),\n      gloryPoints: {\n        wasted: {\n          count: 0\n        },\n        notWasted: {\n          count: 0\n        }\n      }\n    }))))\n  }, [currentWarBand])\n\n  return (\n    <Router>\n      <div className={classes.content}>\n        <Switch>\n          <Route path={ROUTES.CARDS.path} render={() => <Cards/>}/>\n          <Route path={ROUTES.CHOOSE_SQUAD.path} render={() => <ChooseSquad/>}/>\n          <Route path={ROUTES.GAME_END.path} render={() => <GameEnd/>}/>\n          <Route path={ROUTES.PLAY_FIELD.path} render={() => <PlayField/>}/>\n          <Route exact path={ROUTES.MAIN.path} render={() => <Menu/>}/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Round} from '../store/gameReducer'\n\nconst key = 'GAME/COMMON-DATA'\n\nexport type SaveGameType = {\n  currentRound: number\n  currentWarBand: number\n  rounds: Round[]\n}\n\nexport const saveGame = (data: SaveGameType) => {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\n// @ts-ignore\nexport const loadGame = (): SaveGameType | null => {\n  const data = localStorage.getItem(key)\n  let dataParsed = null\n\n  if (data) {\n    try {\n      dataParsed = JSON.parse(data)\n    } catch(err) {}\n  }\n\n  return dataParsed\n}","import { all, takeLatest, select, put } from 'redux-saga/effects'\nimport * as storageManager from '../storage/localStorage'\nimport {gameActions} from './gameReducer'\n\nfunction* saveGame () {\n  const rounds = yield select(({game}) => game.rounds);\n  const currentWarBand = yield select(({game}) => game.currentWarBand);\n  const currentRound = yield select(({game}) => game.currentRound);\n  storageManager.saveGame({\n    rounds,\n    currentRound,\n    currentWarBand\n  });\n  console.log(\"game saved\", {\n    rounds,\n    currentRound,\n    currentWarBand\n  });\n}\n\nfunction* loadGame () {\n  const loadedData = storageManager.loadGame();\n\n  if (loadedData) {\n    yield put(gameActions.loadGameSuccess(loadedData))\n    console.log(\"game loaded\", loadedData)\n  }\n}\n\nexport default function* gameSaga() {\n  yield all([\n    takeLatest('GAME-REDUCER/SAVE-GAME', saveGame),\n    takeLatest('GAME-REDUCER/LOAD-GAME', loadGame),\n\n    takeLatest('GAME-REDUCER/SET-rounds', saveGame),\n    takeLatest('GAME-REDUCER/UPDATE-ROUND', saveGame),\n    takeLatest('GAME-REDUCER/UPDATE-CARD', saveGame),\n    takeLatest('GAME-REDUCER/UPDATE-ACTIVATION-TOKEN', saveGame),\n    takeLatest('GAME-REDUCER/SET-CURRENT-ROUND', saveGame),\n    takeLatest('GAME-REDUCER/SET-CURRENT-WAR-BAND', saveGame),\n    takeLatest('GAME-REDUCER/SET-GLORY-POINTS', saveGame),\n  ])\n};","import {applyMiddleware, combineReducers, compose, createStore, Dispatch} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport {gameReducer} from './gameReducer'\nimport {settingsReducer} from './settingsReducer'\nimport gameSaga from './saga'\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  settings: settingsReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nconst composeEnhancers = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  trace: true,\n  traceLimit: 25\n})) || compose\n\nlet sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n))\n\nsagaMiddleware.run(gameSaga)\n\n// Infer actions object to get types of actions\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\nexport type ThunkType = (...args: any) => (dispatch: Dispatch) => Promise<void>","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport i18next from 'i18next'\nimport {makePublicUrl} from '../utils/utils'\n\n//https://docs.google.com/spreadsheets/d/1BbBGR326YDnC5BESDWaWPgZxARCDQTPyFLrbusOGOgI/edit?usp=sharing\n\ni18n.use(HttpApi).use(LanguageDetector).init({\n  ns: ['common', 'warBands', 'fighters'],\n  defaultNS: 'common',\n  fallbackLng: \"ru\",\n  debug: false,\n  keySeparator: false, // we use content as keys\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: \",\"\n  },\n  detection: {\n    order: [\"cookie\", \"navigator\", \"path\", \"localStorage\", \"subdomain\", \"queryString\", \"htmlTag\"],\n    lookupFromPathIndex: 0,\n    caches: [\"cookie\"],\n    cookieMinutes: 10000000,\n    lookupQuerystring: \"i18next\"\n  },\n  backend: {\n    loadPath: makePublicUrl(\"/locales/{{lng}}/{{ns}}.json\"),\n  },\n  react: {\n    wait: false\n  }\n}, (err, t) => {\n  i18next.t('myKey'); // key in moduleA namespace (defined default)\n  i18next.t('common:myKey'); // key in common namespace\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.scss\";\nimport { Provider } from 'react-redux'\nimport {store} from './store/Store'\nimport i18n from \"./i18n/i18n\";\nimport {I18nextProvider} from 'react-i18next'\nimport { Suspense } from 'react';\n\nconst Loading = () => {\n  return <div>Loading...</div>\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n      <Suspense fallback={<Loading/>}>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </Suspense>\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}