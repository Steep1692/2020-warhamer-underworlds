{"version":3,"sources":["components/views/PlayField/PlayField.module.scss","components/common/FighterItem/FighterItem.module.scss","components/views/Menu/Menu.module.scss","components/base/Button/Button.module.scss","components/views/ChooseSquad/ChooseSquad.module.scss","components/views/GameEnd/GameEnd.module.scss","components/common/InGameTabs/InGameTabs.module.scss","components/common/SquadItem/SquadItem.module.scss","components/icons/Icons.module.scss","components/App.module.scss","components/common/ActivationToken/ActivationToken.module.scss","components/base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper.module.scss","components/base/Button/Button.tsx","store/settingsReducer.ts","components/views/Menu/Menu.jsx","components/common/SquadItem/SquadItem.jsx","store/gameReducer.ts","components/views/ChooseSquad/ChooseSquad.tsx","utils/utils.ts","components/views/GameEnd/GameEnd.jsx","components/icons/Icons.tsx","components/common/InGameTabs/InGameTabs.jsx","components/common/ActivationToken/ActivationToken.jsx","components/base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper.jsx","components/views/PlayField/PlayField.jsx","components/common/FighterItem/FighterItem.jsx","components/views/Cards/Cards.tsx","storage/localStorage.ts","components/App.tsx","reportWebVitals.js","store/saga.tsx","store/Store.tsx","i18n/i18n.js","index.tsx","components/views/Cards/Cards.module.scss"],"names":["module","exports","Button","themeClassName","className","theme","restProps","classes","primary","secondary","third","classnames","root","disabled","initialState","language","settingsActions","type","Menu","t","useTranslation","dispatch","useDispatch","useSelector","settings","isGameCanBeSaved","game","styles","onClick","to","ROUTES","CHOOSE_SQUAD","path","PLAY_FIELD","SquadItem","name","color","image","isFocused","style","backgroundColor","src","alt","currentRound","currentWarBand","rounds","gameActions","roundIndex","index","newPropertyValues","data","payload","SKILL_NAMES","ChooseSquad","tWarBands","useState","focusedSquad","setFocusedSquad","squadElements","returnObjects","map","i","icon","title","paper","items","bottom","getActiveActivationTokens","activationTokens","filter","isActive","weedOutDeadCards","cards","healthPoints","makePublicUrl","url","process","makeImageIconUrl","GameEnd","cardLossesCount","reduce","accum","length","getCardLossesCount","gloryPointsWastedCount","gloryPoints","wasted","count","gloryPointsNotWastedCount","notWasted","MAIN","ImageButton","size","srcDisabled","srcHover","srcDefault","sizeClassName","tiny","InGameTabs","pathname","useLocation","CARDS","exact","ActivationToken","imageUrl","imageAlt","InnerBorderRadiusWrapper","children","PlayField","useEffect","currentRoundObj","roundsCount","canIncreaseRound","canDecreaseRound","increaseGloryPointsNotWasted","decreaseGloryPointsNotWasted","onGloryPointsWastedClick","onGloryPointsNotWastedClick","updateGloryPoints","increase","updateRound","activationTokenElements","GAME_END","FighterItem","isDead","Cards","warBands","currentCardIndex","setCurrentCardIndex","isCardFlipped","setIsCardFlipped","isCardShownFullScreen","setIsCardShownFullScreen","activeActivationTokensCount","roundCards","canApplyDefenceOrDodge","canApplyMoveAndAttack","canApplyMove","canRevokeDefenceOrDodge","canRevokeAttack","canRevokeMove","onHpControlButtonClick","currentCardObj","applySkill","skillName","activationTokenActiveIndex","applied","revokeSkill","toggleCardFullScreen","move","attack","defend","dodge","cardImageSrc","fighters","cardElements","description","card","flipped","default","top","characters","middle","left","actionButton","cardContainer","right","actions","cardFullScreenContainer","cardFullScreenTitle","cardFullScreenImageContainer","cardFullScreenDescription","key","App","i18n","savedGameData","localStorage","getItem","dataParsed","JSON","parse","err","loadGame","changeLanguage","id","content","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","saveGame","gameSaga","select","setItem","stringify","console","log","all","takeLatest","rootReducer","combineReducers","state","action","updateItemInArray","array","obj","stateRounds","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","use","HttpApi","LanguageDetector","init","ns","defaultNS","fallbackLng","debug","keySeparator","interpolation","escapeValue","formatSeparator","detection","order","lookupFromPathIndex","caches","cookieMinutes","lookupQuerystring","backend","loadPath","react","wait","i18next","Loading","ReactDOM","StrictMode","I18nextProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.cfc32500.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlayField_root__1NBq1\",\"top\":\"PlayField_top__15tpd\",\"buttonChangeRound\":\"PlayField_buttonChangeRound__230Fu\",\"round\":\"PlayField_round__1KHUt\",\"activationTokens\":\"PlayField_activationTokens__3nNgI\",\"statistics\":\"PlayField_statistics__3Y9a7\",\"gloryPointsControls\":\"PlayField_gloryPointsControls__3d-w8\",\"gloryPoints\":\"PlayField_gloryPoints__1g3p2\",\"gloryPoint\":\"PlayField_gloryPoint__3anpN\",\"bottom\":\"PlayField_bottom__39J6I\",\"buttonEndGame\":\"PlayField_buttonEndGame__1GtlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FighterItem_root__3fYUL\",\"focused\":\"FighterItem_focused__1fytl\",\"imageContainer\":\"FighterItem_imageContainer__2Ytdc\",\"dead\":\"FighterItem_dead__1VLcB\",\"imageIsDead\":\"FighterItem_imageIsDead__2J0jY\",\"imageFighter\":\"FighterItem_imageFighter__w_NNR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__15shr\",\"title\":\"Menu_title__1VVIM\",\"items\":\"Menu_items__3by7Z\",\"item\":\"Menu_item__1zdMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2-QVb\",\"primary\":\"Button_primary__FZqYg\",\"secondary\":\"Button_secondary__1_JU8\",\"third\":\"Button_third__3rmlg\",\"disabled\":\"Button_disabled__3vE9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChooseSquad_root__zMTP1\",\"title\":\"ChooseSquad_title__2vmE6\",\"paper\":\"ChooseSquad_paper__1YGzK\",\"items\":\"ChooseSquad_items__5WYYr\",\"bottom\":\"ChooseSquad_bottom__1ijla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GameEnd_root__2h6Qj\",\"title\":\"GameEnd_title__unVR0\",\"statistics\":\"GameEnd_statistics__3iA8j\",\"bottom\":\"GameEnd_bottom__PtfK7\",\"buttonAccept\":\"GameEnd_buttonAccept__wDaSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InGameTabs_root__3tNls\",\"button\":\"InGameTabs_button__1jr08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SquadItem_root__1GrLk\",\"focused\":\"SquadItem_focused__1dRd7\",\"imageContainer\":\"SquadItem_imageContainer__34L9E\",\"name\":\"SquadItem_name__3vZRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Icons_root__8nskU\",\"tiny\":\"Icons_tiny__2YyJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__2cDQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ActivationToken_root__18aDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InnerBorderRadiusWrapper_root__zTUsN\"};","import React, {ButtonHTMLAttributes, FC} from 'react'\nimport classes from './Button.module.scss'\nimport classnames from 'classnames'\n\ntype Props = {\n  className?: string\n  theme?: 'primary' | 'secondary' | 'third'\n} & ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button: FC<Props> = ({\n                             className,\n                             theme = 'primary',\n                             ...restProps\n                           }) => {\n  let themeClassName\n\n  if (theme === 'primary') {\n    themeClassName = classes.primary\n  } else if (theme === 'secondary') {\n    themeClassName = classes.secondary\n  } else if (theme === 'third') {\n    themeClassName = classes.third\n  }\n\n  return (\n    <button\n      className={classnames(classes.root, themeClassName, className, {\n        [classes.disabled]: restProps.disabled\n      })}\n      {...restProps}\n    />\n  )\n}\n\nexport default Button","import {InferActionsTypes} from './Store'\n\nconst initialState: SettingsReducerState = {\n  language: \"ru\",\n}\n\nexport const settingsReducer = (state = initialState, action: ActionTypes): SettingsReducerState => {\n  switch (action.type) {\n    case 'SETTINGS-REDUCER/SET-LANGUAGE': {\n      return {\n        ...state,\n        language: action.language\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const settingsActions = {\n  setLanguage: (language: typeof initialState.language) => ({\n    type: 'SETTINGS-REDUCER/SET-LANGUAGE',\n    language\n  } as const),\n}\n\ntype ActionTypes = InferActionsTypes<typeof settingsActions>\n\nexport type SettingsReducerState = {\n  language: \"en\" | \"ru\"\n};","import React from \"react\";\nimport * as styles from \"./Menu.module.scss\";\nimport Button from \"../../base/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport {useTranslation} from 'react-i18next'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {settingsActions} from '../../../store/settingsReducer'\n\nconst Menu = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const { language } = useSelector(({settings}) => settings)\n  const { isGameCanBeSaved } = useSelector(({game}) => game)\n\n  const onButtonToggleLanguageClick = () => {\n    dispatch(settingsActions.setLanguage(\n      (language === 'ru') ? 'en' : 'ru'\n    ))\n  };\n\n  return (\n    <div className={styles.root}>\n      <Button theme=\"secondary\" onClick={onButtonToggleLanguageClick}>{language}</Button>\n      <div className={styles.items}>\n        <div className={styles.title}>{t(\"welcome\")}</div>\n        <Link to={ROUTES.CHOOSE_SQUAD.path} className={styles.item}><Button>{t(\"startGame\")}</Button></Link>\n        <Link to={ROUTES.PLAY_FIELD.path} className={styles.item}><Button disabled={!isGameCanBeSaved}>{t(\"continue\")}</Button></Link>\n      </div>\n    </div>\n  )\n};\n\nexport default Menu;","import React from \"react\";\nimport * as styles from \"./SquadItem.module.scss\";\nimport * as classnames from 'classnames'\n\nconst SquadItem = ({name, color, image, className = \"\", isFocused, ...restProps}) => {\n  return (\n    <div\n      className={classnames(styles.root, className, {\n        [styles.focused]: isFocused\n      })}\n      {...restProps}\n    >\n      <div style={{backgroundColor: color}} className={styles.imageContainer}>\n        <img src={image} alt={name} />\n      </div>\n      {/*<p className={styles.name}>{name}</p>*/}\n    </div>\n  )\n};\n\nexport default SquadItem;","import {InferActionsTypes} from './Store'\nimport {SaveGameType} from '../storage/localStorage'\n\nconst initialState: GameReducerState = {\n  currentRound: 0,\n  currentWarBand: 0,\n  rounds: [],\n  isGameCanBeSaved: false\n}\n\nexport const gameReducer = (state = initialState, action: ActionTypes): GameReducerState => {\n  const updateItemInArray = <T>(array: T[], index: number, newPropertyValues: Partial<T>): T[] => {\n    return array.map((obj: T, i) => {\n      if (i === index) {\n        obj = {\n          ...obj,\n          ...newPropertyValues\n        }\n      }\n\n      return obj\n    })\n  }\n\n  switch (action.type) {\n    case 'GAME-REDUCER/SET-rounds': {\n      return {\n        ...state,\n        rounds: [\n          ...action.rounds\n        ]\n      }\n    }\n    case 'GAME-REDUCER/SET-CURRENT-ROUND': {\n      return {\n        ...state,\n        currentRound: action.payload\n      }\n    }\n    case 'GAME-REDUCER/SET-CURRENT-WAR-BAND': {\n      return {\n        ...state,\n        currentWarBand: action.payload\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-ROUND': {\n      const {index, newPropertyValues} = action.data\n\n      return {\n        ...state,\n        rounds: [\n          ...updateItemInArray<Round>(state.rounds, index, newPropertyValues)\n        ]\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-CARD': {\n      const {roundIndex, index, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].cards = [\n        ...updateItemInArray<Card>(stateRounds[roundIndex].cards, index, newPropertyValues)\n      ]\n\n      return {\n        ...state,\n        rounds: stateRounds,\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-ACTIVATION-TOKEN': {\n      const {roundIndex, index, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].activationTokens = [\n        ...updateItemInArray<ActivationToken>(stateRounds[roundIndex].activationTokens, index, newPropertyValues)\n      ]\n\n      return {\n        ...state,\n        rounds: stateRounds\n      }\n    }\n    case 'GAME-REDUCER/SET-GLORY-POINTS': {\n      const {roundIndex, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].gloryPoints = {\n        ...stateRounds[roundIndex].gloryPoints,\n        ...newPropertyValues\n      }\n\n      return {\n        ...state,\n        rounds: stateRounds\n      }\n    }\n    case 'GAME-REDUCER/RESET-GAME': {\n      return {\n        ...initialState\n      }\n    }\n    case 'GAME-REDUCER/LOAD-GAME': {\n      return {\n        ...initialState,\n        rounds: action.data?.rounds,\n        currentWarBand: action.data?.currentWarBand,\n        currentRound: action.data?.currentRound,\n        isGameCanBeSaved: true\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const gameActions = {\n  setRounds: (rounds: typeof initialState.rounds) => ({\n    type: 'GAME-REDUCER/SET-rounds',\n    rounds\n  } as const),\n  updateRound: (index: number, newPropertyValues: Partial<Round>) => ({\n    type: 'GAME-REDUCER/UPDATE-ROUND',\n    data: {index, newPropertyValues}\n  } as const),\n  updateCard: (roundIndex: number, index: number, newPropertyValues: Partial<Card>) => ({\n    type: 'GAME-REDUCER/UPDATE-CARD',\n    data: {roundIndex, index, newPropertyValues}\n  } as const),\n  updateActivationToken: (roundIndex: number, index: number, newPropertyValues: Partial<ActivationToken>) => ({\n    type: 'GAME-REDUCER/UPDATE-ACTIVATION-TOKEN',\n    data: {roundIndex, index, newPropertyValues}\n  } as const),\n  setCurrentRound: (payload: number) => ({\n    type: 'GAME-REDUCER/SET-CURRENT-ROUND',\n    payload\n  } as const),\n  setCurrentWarBand: (payload: number) => ({\n    type: 'GAME-REDUCER/SET-CURRENT-WAR-BAND',\n    payload\n  } as const),\n  updateGloryPoints: (roundIndex: number, newPropertyValues: Partial<GloryPoints>) => ({\n    type: 'GAME-REDUCER/SET-GLORY-POINTS',\n    data: {roundIndex, newPropertyValues}\n  } as const),\n  resetGame: () => ({\n    type: 'GAME-REDUCER/RESET-GAME',\n  } as const),\n  loadGame: (data: SaveGameType) => ({\n    type: 'GAME-REDUCER/LOAD-GAME',\n    data\n  } as const),\n  saveGame: () => ({\n    type: 'GAME-REDUCER/SAVE-GAME',\n  } as const),\n}\n\ntype ActionTypes = InferActionsTypes<typeof gameActions>\n\nexport type GameReducerState = {\n  currentRound: number\n  currentWarBand: number\n  rounds: Round[]\n  isGameCanBeSaved: boolean\n};\n\nexport type Round = {\n  activationTokens: ActivationToken[]\n  cards: Card[]\n  gloryPoints: GloryPoints\n}\n\nexport type ActivationToken = {\n  isActive: boolean\n}\n\nexport const SKILL_NAMES = {\n  MOVE: \"move\",\n  ATTACK: \"attack\",\n  DEFEND: \"defend\",\n  DODGE: \"dodge\"\n} as const\n\nexport type ValueOf<T> = T[keyof T];\nexport type SkillName = ValueOf<typeof SKILL_NAMES>\n\nexport type Card = {\n  healthPoints: number\n  name: string\n  [SKILL_NAMES.MOVE]: Skill\n  [SKILL_NAMES.ATTACK]: Skill\n  [SKILL_NAMES.DEFEND]: Skill\n  [SKILL_NAMES.DODGE]: Skill\n}\n\nexport type GloryPoints = {\n  wasted: {\n    count: number\n  },\n  notWasted: {\n    count: number\n  }\n}\n\nexport type Skill = {\n  applied: boolean\n}","import React, {useState} from \"react\";\nimport classes from \"./ChooseSquad.module.scss\";\nimport SquadItem from \"../../common/SquadItem/SquadItem\";\nimport Button from \"../../base/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport {useTranslation} from 'react-i18next'\nimport {useDispatch} from 'react-redux'\nimport {gameActions} from '../../../store/gameReducer'\n\nconst ChooseSquad = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const { t: tWarBands } = useTranslation(\"warBands\")\n  const [focusedSquad, setFocusedSquad] = useState(0);\n  const bandItems: any[] = tWarBands(\"items\", { returnObjects: true })\n\n\n  const handleAcceptChooseClick = () => {\n    // dispatch(gameActions.resetGame())\n  }\n\n  const squadElements = bandItems.map(({name, icon, color}, i) => {\n    return <SquadItem\n      name={name}\n      image={icon}\n      color={color}\n      key={`war-band-${i}`}\n      isFocused={focusedSquad === i}\n      onClick={() => {\n        setFocusedSquad(i);\n        dispatch(gameActions.setCurrentWarBand(i))\n      }}\n    />\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{t(\"chooseSquad\")}</div>\n      <div className={classes.paper}>\n        <div className={classes.items}>\n          {squadElements}\n        </div>\n        <div className={classes.bottom}>\n          <Link to={ROUTES.PLAY_FIELD.path}><Button onClick={handleAcceptChooseClick}>{t(\"acceptChoose\")}</Button></Link>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default ChooseSquad;","import {ActivationToken, Card} from '../store/gameReducer'\n\nexport const getActiveActivationTokensCount = (activationTokens: ActivationToken[]) => {\n  return getActiveActivationTokens(activationTokens).length;\n};\n\nexport const getActiveActivationTokens = (activationTokens: ActivationToken[] = []) => {\n  return activationTokens.filter(({isActive}) => isActive);\n};\n\nexport const getCardLossesCount = (cards: Card[]) => {\n  return cards.length - weedOutDeadCards(cards).length;\n};\n\nexport const weedOutDeadCards = (cards: Card[]) => {\n  return cards.filter(({healthPoints}) => {\n    return !!healthPoints;\n  });\n};\n\nexport const makePublicUrl = (url: string) => process.env.PUBLIC_URL + url;\nexport const makeImageIconUrl = (name: string) => makePublicUrl(`/images/icons/${name}.png`);\n","import React from 'react'\nimport * as styles from \"./GameEnd.module.scss\";\nimport Button from \"../../base/Button/Button\";\nimport {ROUTES} from \"../../App\";\nimport {Link} from \"react-router-dom\";\nimport {getCardLossesCount} from '../../../utils/utils'\nimport {useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\n\nconst GameEnd = () => {\n  const { t } = useTranslation()\n  const {\n    rounds,\n  } = useSelector(({game}) => game);\n\n  const cardLossesCount = rounds.reduce((accum, {cards}) => {\n    return accum + getCardLossesCount(cards);\n  }, 0);\n  const gloryPointsWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.wasted.count;\n  }, 0);\n  const gloryPointsNotWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.notWasted.count;\n  }, 0);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{t(\"gameEnd\")}</div>\n      <div className={styles.statistics}>\n        <table>\n          <thead>\n          <tr>\n            <td>{t(\"gloryPointTokens\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{t(\"notWasted\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          <tr>\n            <td>{t(\"wasted\")}</td>\n            <td>{gloryPointsWastedCount}</td>\n          </tr>\n          </tbody>\n          <thead>\n          <tr>\n            <td>{t(\"fightersInTheSquad\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{t(\"casualties\")}</td>\n            <td>{cardLossesCount}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className={styles.bottom}>\n        <Link to={ROUTES.MAIN.path}><Button className={styles.buttonAccept}>{t(\"accept\")}</Button></Link>\n      </div>\n    </div>\n  )\n};\n\nexport default GameEnd;","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react'\nimport classes from './Icons.module.scss'\nimport classnames from 'classnames'\nimport {makeImageIconUrl} from '../../utils/utils'\n\ntype ImageButtonProps = {\n  size?: \"tiny\" | undefined\n  srcDisabled?: string\n  srcHover?: string\n  srcDefault: string\n} & DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\nconst ImageButton: FC<ImageButtonProps> = ({\n                                             size,\n                                             srcDisabled,\n                                             srcHover,\n                                             srcDefault,\n                                             className,\n                                             ...restProps\n                                           }) => {\n  let sizeClassName = \"\";\n\n  if (size === \"tiny\") {\n    sizeClassName = classes.tiny\n  }\n\n  return (\n    <button\n      className={classnames(classes.root, className, sizeClassName)}\n      style={{\n        // @ts-ignore\n        '--src-disabled': `url(\"${makeImageIconUrl(srcDisabled || srcDefault)}\")`,\n        '--src-hover': `url(\"${makeImageIconUrl(srcHover || srcDefault)}\")`,\n        '--src-default': `url(\"${makeImageIconUrl(srcDefault)}\")`\n      }}\n      {...restProps}\n    />\n  )\n}\n\nexport default ImageButton","import React from 'react'\nimport * as styles from './InGameTabs.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport {ROUTES} from '../../App'\nimport ImageButton from '../../icons/Icons'\nimport {useLocation} from 'react-router'\n\nconst InGameTabs = () => {\n  const {pathname} = useLocation()\n  return (\n    <div className={styles.root}>\n      <NavLink to={ROUTES.CARDS.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_selected_hero\"\n          srcHover=\"ic_menu_selected_hero_active\"\n          srcDisabled=\"ic_menu_selected_hero_active\"\n          disabled={pathname === ROUTES.CARDS.path}\n        />\n      </NavLink>\n      <NavLink to={ROUTES.PLAY_FIELD.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_game_score\"\n          srcHover=\"ic_menu_game_score_active\"\n          srcDisabled=\"ic_menu_game_score_active\"\n          disabled={pathname === ROUTES.PLAY_FIELD.path}\n        />\n      </NavLink>\n      <NavLink exact to={ROUTES.MAIN.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_save_and_exit\"\n          disabled={pathname === ROUTES.MAIN.path}\n        />\n      </NavLink>\n    </div>\n  )\n}\n\nexport default InGameTabs","import React from \"react\";\nimport * as styles from \"./ActivationToken.module.scss\";\nimport {makeImageIconUrl, makePublicUrl} from '../../../utils/utils'\nimport * as classnames from 'classnames'\n\nconst ActivationToken = ({className = \"\", isActive = false, ...restProps}) => {\n  let imageUrl, imageAlt\n\n  if (isActive) {\n    imageUrl = makeImageIconUrl('ic_activation_token')\n    imageAlt = \"Activation token active\"\n  } else {\n    imageUrl = makeImageIconUrl('ic_activation_token_spent')\n    imageAlt = \"Activation token spent\"\n  }\n\n  return (\n    <div className={classnames(styles.root, className)} {...restProps}>\n      <img src={imageUrl} alt={imageAlt}/>\n    </div>\n  )\n};\n\nexport default ActivationToken;","import React from \"react\";\nimport * as styles from \"./InnerBorderRadiusWrapper.module.scss\";\nimport * as classnames from 'classnames'\n\nconst InnerBorderRadiusWrapper = ({className, children, ...restProps}) => {\n  return (\n    <div className={classnames(styles.root, className)} {...restProps}>\n        {children}\n    </div>\n  )\n};\n\nexport default InnerBorderRadiusWrapper;","import React, {useEffect} from 'react'\nimport * as styles from \"./PlayField.module.scss\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport InGameTabs from \"../../common/InGameTabs/InGameTabs\";\nimport Button from '../../base/Button/Button'\nimport ActivationToken from '../../common/ActivationToken/ActivationToken'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { useTranslation } from 'react-i18next';\nimport InnerBorderRadiusWrapper from '../../base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper'\nimport {gameActions} from '../../../store/gameReducer'\nimport ImageButton from '../../icons/Icons'\nimport {makeImageIconUrl} from '../../../utils/utils'\n\nconst PlayField = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const {rounds} = useSelector(({game}) => game);\n  const {currentRound} = useSelector(({game}) => game);\n  const {isGameCanBeSaved} = useSelector(({game}) => game);\n\n  useEffect(() => {\n    if (isGameCanBeSaved) {\n      dispatch(gameActions.saveGame())\n    }\n  }, [isGameCanBeSaved]);\n\n  const currentRoundObj = rounds[currentRound];\n  const roundsCount = rounds.length;\n  const activationTokens = currentRoundObj?.activationTokens;\n\n  const canIncreaseRound = currentRound < roundsCount - 1;\n  const canDecreaseRound = currentRound > 0;\n\n  const gloryPointsWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.wasted.count;\n  }, 0);\n  const gloryPointsNotWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.notWasted.count;\n  }, 0);\n\n  const increaseGloryPointsWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        wasted: {\n          count: gloryPointsWastedCount + 1\n        }\n      })\n    );\n  }\n  const decreaseGloryPointsWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        wasted: {\n          count: gloryPointsWastedCount - 1\n        }\n      })\n    );\n  }\n  const increaseGloryPointsNotWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        notWasted: {\n          count: gloryPointsNotWastedCount + 1\n        }\n      })\n    );\n  }\n  const decreaseGloryPointsNotWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        notWasted: {\n          count: gloryPointsNotWastedCount - 1\n        }\n      })\n    );\n  }\n\n  const onGloryPointsWastedClick = () => {\n    if (gloryPointsWastedCount) {\n      decreaseGloryPointsWasted()\n      increaseGloryPointsNotWasted()\n    }\n  };\n\n  const onGloryPointsNotWastedClick = () => {\n    if (gloryPointsNotWastedCount) {\n      decreaseGloryPointsNotWasted()\n      increaseGloryPointsWasted()\n    }\n  };\n\n  const updateGloryPoints = (increase = true) => {\n    if (increase) {\n      increaseGloryPointsNotWasted()\n    } else {\n      decreaseGloryPointsNotWasted()\n    }\n  };\n\n  const updateRound = (increase) => {\n    if (increase) {\n      if (canIncreaseRound) {\n        dispatch(gameActions.setCurrentRound(currentRound + 1));\n      }\n    } else {\n      if (canDecreaseRound) {\n        dispatch(gameActions.setCurrentRound(currentRound - 1));\n      }\n    }\n  };\n\n  const activationTokenElements = activationTokens?.map(({isActive}, i) => (\n    <ActivationToken\n      onClick={() => {\n        dispatch(gameActions.updateActivationToken(currentRound, i, {\n          isActive: !isActive\n        }))\n      }}\n      key={i}\n      isActive={isActive}\n    />\n  ));\n\n  return (\n    <div className={styles.root}>\n\n      <div className={styles.top}>\n        <ImageButton\n          className={styles.buttonChangeRound}\n          srcDefault=\"ic_previous_round\"\n          srcHover=\"ic_previous_round_pressed\"\n          srcDisabled=\"ic_previous_round_inactive\"\n          disabled={!canDecreaseRound}\n          onClick={() => updateRound(false)}\n        />\n        <InnerBorderRadiusWrapper className={styles.round}>\n          <span>{t(\"round\")} {currentRound + 1}</span>\n        </InnerBorderRadiusWrapper>\n        <ImageButton\n          className={styles.buttonChangeRound}\n          srcDefault=\"ic_next_round\"\n          srcHover=\"ic_next_round_pressed\"\n          srcDisabled=\"ic_next_round_inactive\"\n          disabled={!canIncreaseRound}\n          onClick={() => updateRound(true)}\n        />\n      </div>\n\n      <div className={styles.activationTokens}>\n        {activationTokenElements}\n      </div>\n\n      <div className={styles.statistics}>\n        <div className={styles.gloryPointsControls}>\n          <Button\n            theme=\"secondary\"\n            onClick={() => {\n              updateGloryPoints(true);}\n            }\n          >+</Button>\n          <Button\n            theme=\"secondary\"\n            disabled={!gloryPointsNotWastedCount}\n            onClick={() => {\n              updateGloryPoints(false);}\n            }\n          >-</Button>\n        </div>\n        <div className={styles.gloryPoints}>\n          <Button\n            disabled={!gloryPointsNotWastedCount}\n            className={styles.gloryPoint}\n            onClick={() => {\n              onGloryPointsNotWastedClick();\n            }}\n          >\n            <img\n              src={makeImageIconUrl(\"ic_glory_point\")}\n              alt={`${t(\"gloryPointTokens\")} {t(\"wasted\")}`}\n            />\n            {gloryPointsNotWastedCount}</Button>\n          <Button\n            disabled={!gloryPointsWastedCount}\n            className={styles.gloryPoint}\n            onClick={() => {\n              onGloryPointsWastedClick(false);\n            }}\n          >\n            <img\n              src={makeImageIconUrl(\"ic_glory_point_spent\")}\n              alt={`${t(\"gloryPointTokens\")} {t(\"notWasted\")}`}\n            />\n            {gloryPointsWastedCount}\n          </Button>\n        </div>\n      </div>\n\n      <div className={styles.bottom}>\n        <Link to={ROUTES.GAME_END.path} className={styles.buttonEndGame}><Button theme=\"third\">{t(\"endGame\")}</Button></Link>\n        <InGameTabs/>\n      </div>\n\n    </div>\n  )\n};\n\nexport default PlayField;","import React from \"react\";\nimport * as styles from \"./FighterItem.module.scss\";\nimport * as classnames from 'classnames'\nimport {makeImageIconUrl} from '../../../utils/utils'\n\nconst FighterItem = ({name, isDead, image, className = \"\", isFocused, ...restProps}) => {\n  return (\n    <div\n      className={classnames(styles.root, className, {\n        [styles.focused]: isFocused,\n        [styles.dead]: isDead\n      })}\n      {...restProps}\n    >\n      <div className={styles.imageContainer}>\n        <img className={styles.imageFighter} src={image} alt={name} />\n        <img className={styles.imageIsDead} src={makeImageIconUrl(\"ic_fighter_is_dead\")} alt=\"Is dead\"/>\n      </div>\n    </div>\n  )\n};\n\nexport default FighterItem;","import React, {useEffect, useState} from 'react'\nimport classes from './Cards.module.scss'\nimport Button from '../../base/Button/Button'\nimport InGameTabs from '../../common/InGameTabs/InGameTabs'\nimport {getActiveActivationTokens} from '../../../utils/utils'\nimport {Card, gameActions, SKILL_NAMES, SkillName} from '../../../store/gameReducer'\nimport FighterItem from '../../common/FighterItem/FighterItem'\nimport ImageButton from '../../icons/Icons'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\n\nconst Cards = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation(\"warBands\")\n  const warBands: any[] = t(\"items\", { returnObjects: true })\n  const {rounds} = useSelector(({game}) => game)\n  const {currentRound} = useSelector(({game}) => game)\n  const {currentWarBand} = useSelector(({game}) => game)\n  const [currentCardIndex, setCurrentCardIndex] = useState(0)\n  const [isCardFlipped, setIsCardFlipped] = useState(false)\n  const [isCardShownFullScreen, setIsCardShownFullScreen] = useState(false)\n\n  const currentRoundObj = rounds[currentRound]\n  const activationTokens = currentRoundObj?.activationTokens\n  const activeActivationTokens = getActiveActivationTokens(activationTokens)\n  const activeActivationTokensCount = activeActivationTokens.length\n\n  const roundCards = rounds[currentRound]?.cards || []\n\n  useEffect(() => {\n    if (isCardFlipped) {\n      setIsCardFlipped(false)\n    }\n  }, [currentCardIndex])\n\n  const onHpControlButtonClick = (increase = true) => {\n    if (increase) {\n      dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n        healthPoints: currentCardObj?.healthPoints + 1\n      }))\n    } else {\n      const {healthPoints} = currentCardObj\n\n      if (healthPoints) {\n        dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n          healthPoints: healthPoints - 1\n        }))\n      }\n    }\n  }\n\n  const applySkill = (skillName: SkillName) => {\n    if (activeActivationTokensCount) {\n      dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n        [skillName]: {\n          applied: true\n        }\n      }))\n\n      let activationTokenActiveIndex\n\n      for (let i = activationTokens.length - 1, length = 0; i >= length; i--) {\n        if (activationTokens[i].isActive) {\n          activationTokenActiveIndex = i\n          break\n        }\n      }\n\n      if (activationTokenActiveIndex) {\n        dispatch(gameActions.updateActivationToken(\n          currentRound,\n          activationTokenActiveIndex,\n          {isActive: false})\n        )\n      }\n    }\n  }\n  const revokeSkill = (skillName: SkillName) => {\n    dispatch(\n      gameActions.updateCard(currentRound, currentCardIndex, {\n        [skillName]: false\n      })\n    )\n  }\n\n  const flipCard = () => {\n    setIsCardFlipped(!isCardFlipped)\n  }\n\n  const toggleCardFullScreen = () => {\n    setIsCardShownFullScreen(!isCardShownFullScreen)\n  }\n\n  const currentCardObj: Card = roundCards[0]\n  let canApplyDefenceOrDodge\n  let canApplyMoveAndAttack\n  let canApplyMove\n  let canRevokeDefenceOrDodge\n  let canRevokeAttack\n  let canRevokeMove\n\n  if (currentCardObj) {\n    const {move, attack, defend, dodge} = currentCardObj\n\n    canApplyDefenceOrDodge = activeActivationTokensCount && !defend.applied\n      && !dodge.applied && !attack.applied && !move.applied\n    canApplyMoveAndAttack = activeActivationTokensCount && !attack.applied && !move.applied\n    canApplyMove = activeActivationTokensCount && !attack.applied && !move.applied\n    canRevokeDefenceOrDodge = defend.applied && dodge.applied\n    canRevokeAttack = attack.applied\n    canRevokeMove = move.applied\n  }\n\n\n  const {fighters} = warBands[currentWarBand]\n\n  const cardElements = fighters.map(({icon, name}: any, i: number) => {\n    return <FighterItem\n      isDead={false}\n      key={`fighter-${i}`}\n      name={name}\n      image={icon}\n      isFocused={currentCardIndex === i}\n      onClick={() => {\n        setCurrentCardIndex(i)\n      }}\n    />\n  })\n  const {name, description, card} = fighters[currentCardIndex]\n\n  let cardImageSrc\n  if (isCardFlipped) {\n    cardImageSrc = card.flipped\n  } else {\n    cardImageSrc = card.default\n  }\n\n  return (\n    <div className={classes.root}>\n\n      <div className={classes.top}>\n        <div className={classes.characters}>\n          {cardElements}\n        </div>\n      </div>\n\n      <div className={classes.middle}>\n        {\n          (currentCardObj)\n            ? <>\n              <div className={classes.card}>\n                <div className={classes.left}>\n                  <Button theme=\"secondary\" onClick={flipCard}>\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault={\n                        (isCardFlipped)\n                          ? \"ic_condition_inspired_active\"\n                          : \"ic_condition_inspired\"\n                      }\n                    />\n                  </Button>\n                  <Button theme=\"secondary\"\n                          disabled={!canRevokeMove && !canRevokeAttack}\n                          onClick={() => {\n                            revokeSkill(SKILL_NAMES.MOVE)\n                            revokeSkill(SKILL_NAMES.ATTACK)\n                          }}\n                  >\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault={\n                        (canRevokeMove && canRevokeAttack)\n                          ? 'ic_condition_out_of_actions_active'\n                          : 'ic_condition_out_of_moves_active'}\n                      srcDisabled=\"ic_condition_out_of_actions\"\n                      disabled={!canRevokeMove && !canRevokeAttack}\n                    />\n                  </Button>\n                  <Button theme=\"secondary\"\n                          disabled={!canRevokeDefenceOrDodge}\n                          onClick={() => {\n                            revokeSkill(SKILL_NAMES.DEFEND)\n                            revokeSkill(SKILL_NAMES.DODGE)\n                          }}\n                  >\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault=\"ic_condition_on_defensive_active\"\n                      srcDisabled=\"ic_condition_on_defensive\"\n                      disabled={!canRevokeDefenceOrDodge}\n                    />\n                  </Button>\n                </div>\n                <div className={classes.cardContainer}>\n                  <img onClick={toggleCardFullScreen} src={cardImageSrc} alt={name}/>\n                </div>\n                <div className={classes.right}>\n                  <Button\n                    onClick={() => {\n                      onHpControlButtonClick(true)\n                    }}\n                    theme=\"secondary\"\n                  >+</Button>\n                  <div className={classes.healthPoints}>{currentCardObj.healthPoints}</div>\n                  <Button\n                    disabled={!currentCardObj.healthPoints}\n                    onClick={() => {\n                      onHpControlButtonClick(false)\n                    }}\n                    theme=\"secondary\"\n                  >-</Button>\n                </div>\n              </div>\n              <div className={classes.actions}>\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_action_defense\"\n                  srcDisabled=\"ic_activation_is_forbidden\"\n                  disabled={!canApplyDefenceOrDodge}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.DEFEND)\n                    applySkill(SKILL_NAMES.DODGE)\n                  }}\n                />\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_condition_out_of_actions\"\n                  srcDisabled=\"ic_action_attack_forbidden\"\n                  disabled={!canApplyMoveAndAttack}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.MOVE)\n                    applySkill(SKILL_NAMES.ATTACK)\n                  }}\n                />\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_moves\"\n                  srcDisabled=\"ic_action_movement\"\n                  disabled={!canApplyMove}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.MOVE)\n                  }}\n                />\n              </div>\n            </>\n            : ''\n        }\n      </div>\n\n      <div className={classes.bottom}>\n        <InGameTabs/>\n      </div>\n\n      {\n        (isCardShownFullScreen)\n          ? (\n            <div className={classes.cardFullScreenContainer}>\n              <div className={classes.cardFullScreenTitle}>{name}</div>\n              <div className={classes.cardFullScreenImageContainer}>\n                <img onClick={toggleCardFullScreen} src={cardImageSrc} alt={name}/>\n              </div>\n              <p className={classes.cardFullScreenDescription}>{description}</p>\n            </div>\n          )\n          : ''\n      }\n    </div>\n  )\n}\n\nexport default Cards","import {Round} from '../store/gameReducer'\n\nconst key = 'GAME/COMMON-DATA'\n\nexport type SaveGameType = {\n  currentRound: number\n  currentWarBand: number\n  rounds: Round[]\n}\n\nexport const saveGame = (data: SaveGameType) => {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\n// @ts-ignore\nexport const loadGame = (): SaveGameType | null => {\n  const data = localStorage.getItem(key)\n  let dataParsed = null\n\n  if (data) {\n    try {\n      dataParsed = JSON.parse(data)\n    } catch(err) {}\n  }\n\n  return dataParsed\n}","import React, {useEffect} from 'react'\nimport classes from './App.module.scss'\nimport Menu from './views/Menu/Menu'\nimport ChooseSquad from './views/ChooseSquad/ChooseSquad'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport GameEnd from './views/GameEnd/GameEnd'\nimport PlayField from './views/PlayField/PlayField'\nimport Cards from './views/Cards/Cards'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\nimport {gameActions} from '../store/gameReducer'\nimport {loadGame} from '../storage/localStorage'\n\nexport const ROUTES = {\n  MAIN: {\n    path: '/'\n  },\n  CHOOSE_SQUAD: {\n    path: '/choose-squad'\n  },\n  GAME_END: {\n    path: '/game-end'\n  },\n  PLAY_FIELD: {\n    path: '/play-field'\n  },\n  CARDS: {\n    path: '/cards'\n  }\n}\n\nfunction App() {\n  const dispatch = useDispatch()\n  const {i18n} = useTranslation()\n  const {language} = useSelector(({settings}) => settings)\n  const {rounds} = useSelector(({game}) => game)\n\n  useEffect(() => {\n    const savedGameData = loadGame()\n\n    if (savedGameData) {\n      dispatch(gameActions.loadGame(savedGameData))\n    }\n  }, [])\n\n  useEffect(() => {\n    i18n.changeLanguage(language)\n  }, [language])\n\n  useEffect(() => {\n    const _fetchCards = () => {\n      const characters = [\n        'Обрин отважный',\n        'Северин Стальное Сердце',\n        'Ангард Светлый Щит'\n      ]\n\n      dispatch(gameActions.setRounds(characters.map((name, i) => ({\n        activationTokens: [\n          {isActive: true},\n          {isActive: true},\n          {isActive: true},\n          {isActive: true}\n        ],\n        cards: [{\n          id: i,\n          name,\n          healthPoints: 5,\n          move: {applied: false},\n          attack: {applied: false},\n          defend: {applied: false},\n          dodge: {applied: false}\n        }],\n        gloryPoints: {\n          wasted: {\n            count: 0\n          },\n          notWasted: {\n            count: 0\n          }\n        }\n      }))))\n    }\n\n    if (!rounds.length) {\n      _fetchCards()\n    }\n  }, [rounds, dispatch])\n\n  return (\n    <Router>\n      <div className={classes.content}>\n        <Switch>\n          <Route path={ROUTES.CARDS.path} render={() => <Cards/>}/>\n          <Route path={ROUTES.CHOOSE_SQUAD.path} render={() => <ChooseSquad/>}/>\n          <Route path={ROUTES.GAME_END.path} render={() => <GameEnd/>}/>\n          <Route path={ROUTES.PLAY_FIELD.path} render={() => <PlayField/>}/>\n          <Route exact path={ROUTES.MAIN.path} render={() => <Menu/>}/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { all, takeLatest, select } from 'redux-saga/effects'\nimport * as storageManager from '../storage/localStorage'\n\nfunction* saveGame () {\n  const rounds = yield select(({game}) => game.rounds);\n  const currentWarBand = yield select(({game}) => game.currentWarBand);\n  const currentRound = yield select(({game}) => game.currentRound);\n  storageManager.saveGame({\n    rounds,\n    currentRound,\n    currentWarBand\n  });\n  console.log(\"game saved\");\n}\n\nexport default function* gameSaga() {\n  yield all([\n    takeLatest('GAME-REDUCER/SAVE-GAME', saveGame)\n  ])\n};","import {applyMiddleware, combineReducers, compose, createStore, Dispatch} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport {gameReducer} from './gameReducer'\nimport {settingsReducer} from './settingsReducer'\nimport gameSaga from './saga'\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  settings: settingsReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nconst composeEnhancers = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  trace: true,\n  traceLimit: 25\n})) || compose\n\nlet sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n))\n\nsagaMiddleware.run(gameSaga)\n\n// Infer actions object to get types of actions\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\nexport type ThunkType = (...args: any) => (dispatch: Dispatch) => Promise<void>","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport i18next from 'i18next'\nimport {makePublicUrl} from '../utils/utils'\n\n//https://docs.google.com/spreadsheets/d/1BbBGR326YDnC5BESDWaWPgZxARCDQTPyFLrbusOGOgI/edit?usp=sharing\n\ni18n.use(HttpApi).use(LanguageDetector).init({\n  ns: ['common', 'warBands'],\n  defaultNS: 'common',\n  fallbackLng: \"ru\",\n  debug: false,\n  keySeparator: false, // we use content as keys\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: \",\"\n  },\n  detection: {\n    order: [\"cookie\", \"navigator\", \"path\", \"localStorage\", \"subdomain\", \"queryString\", \"htmlTag\"],\n    lookupFromPathIndex: 0,\n    caches: [\"cookie\"],\n    cookieMinutes: 10000000,\n    lookupQuerystring: \"i18next\"\n  },\n  backend: {\n    loadPath: makePublicUrl(\"/locales/{{lng}}/{{ns}}.json\"),\n  },\n  react: {\n    wait: false\n  }\n}, (err, t) => {\n  i18next.t('myKey'); // key in moduleA namespace (defined default)\n  i18next.t('common:myKey'); // key in common namespace\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.scss\";\nimport { Provider } from 'react-redux'\nimport {store} from './store/Store'\nimport i18n from \"./i18n/i18n\";\nimport {I18nextProvider} from 'react-i18next'\nimport { Suspense } from 'react';\n\nconst Loading = () => {\n  return <div>Loading...</div>\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n      <Suspense fallback={<Loading/>}>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </Suspense>\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Cards_root__3RkX3\",\"top\":\"Cards_top__3kvPN\",\"characters\":\"Cards_characters__2jjA-\",\"characterName\":\"Cards_characterName__1fnBW\",\"middle\":\"Cards_middle__aBXFe\",\"card\":\"Cards_card__2X5jI\",\"left\":\"Cards_left__1vuLh\",\"right\":\"Cards_right__1rR5w\",\"cardContainer\":\"Cards_cardContainer__35eFG\",\"actions\":\"Cards_actions__2fDA8\",\"healthPoints\":\"Cards_healthPoints__3gxwV\",\"bottom\":\"Cards_bottom__tFEIU\",\"cardFullScreenContainer\":\"Cards_cardFullScreenContainer__2Fmmf\",\"cardFullScreenImageContainer\":\"Cards_cardFullScreenImageContainer__2vNYv\",\"cardFullScreenTitle\":\"Cards_cardFullScreenTitle__3G8FE\",\"cardFullScreenDescription\":\"Cards_cardFullScreenDescription__1bqgV\"};"],"sourceRoot":""}