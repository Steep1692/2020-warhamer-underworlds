{"version":3,"sources":["components/views/PlayField/PlayField.module.scss","components/views/Menu/Menu.module.scss","components/base/Button/Button.module.scss","components/views/ChooseSquad/ChooseSquad.module.scss","components/views/GameEnd/GameEnd.module.scss","components/common/FighterItem/FighterItem.module.scss","components/common/InGameTabs/InGameTabs.module.scss","components/common/SquadItem/SquadItem.module.scss","components/icons/Icons.module.scss","components/App.module.scss","components/common/ActivationToken/ActivationToken.module.scss","components/base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper.module.scss","components/base/Scroll/Scroll.module.scss","components/views/Cards/Cards.module.scss","components/base/Button/Button.tsx","store/settingsReducer.ts","components/views/Menu/Menu.jsx","utils/utils.ts","components/common/SquadItem/SquadItem.jsx","store/gameReducer.ts","components/views/ChooseSquad/ChooseSquad.tsx","components/views/GameEnd/GameEnd.jsx","components/icons/Icons.tsx","components/common/InGameTabs/InGameTabs.jsx","components/common/ActivationToken/ActivationToken.jsx","components/base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper.jsx","components/views/PlayField/PlayField.tsx","components/common/FighterItem/FighterItem.tsx","components/base/Scroll/Scroll.tsx","components/views/Cards/Cards.tsx","components/App.tsx","reportWebVitals.js","storage/localStorage.ts","store/saga.tsx","store/Store.tsx","i18n/i18n.js","index.tsx"],"names":["module","exports","Button","themeClassName","className","theme","restProps","classes","primary","secondary","third","classnames","root","disabled","initialState","language","settingsActions","type","Menu","t","useTranslation","dispatch","useDispatch","useSelector","settings","styles","onClick","to","ROUTES","CHOOSE_SQUAD","path","PLAY_FIELD","getActiveActivationTokens","activationTokens","filter","isActive","weedOutDeadCards","cards","healthPoints","makePublicUrl","url","process","makeImageIconUrl","name","makeImageFighterUrl","makeImageWarBandUrl","makeImageCardUrl","lang","SquadItem","color","icon","isFocused","style","backgroundColor","src","alt","currentRound","currentWarBand","warBand","fighters","rounds","gloryPoints","wasted","count","notWasted","isGameCanBeSaved","gameActions","roundIndex","index","newPropertyValues","data","payload","SKILL_NAMES","MOVE","ATTACK","DEFEND","DODGE","ChooseSquad","tWarBands","useState","focusedSquad","setFocusedSquad","bandItems","returnObjects","useEffect","squadElements","map","i","title","paper","items","bottom","GameEnd","game","cardLossesCount","reduce","accum","length","getCardLossesCount","gloryPointsWastedCount","gloryPointsNotWastedCount","MAIN","ImageButton","size","srcDisabled","srcHover","srcDefault","sizeClassName","tiny","InGameTabs","pathname","useLocation","CARDS","exact","ActivationToken","imageUrl","imageAlt","InnerBorderRadiusWrapper","children","PlayField","currentRoundObj","roundsCount","canIncreaseRound","canDecreaseRound","increaseGloryPointsNotWasted","decreaseGloryPointsNotWasted","console","log","onGloryPointsWastedClick","onGloryPointsNotWastedClick","updateGloryPoints","increase","updateRound","activationTokenElements","top","buttonChangeRound","round","statistics","gloryPointsControls","gloryPoint","GAME_END","buttonEndGame","FighterItem","iconOnItem","item","iconName","attack","defend","dodge","move","applied","focused","imageContainer","imageFighter","Scroll","Cards","canApplyDefenceOrDodge","canApplyMoveAndAttack","canApplyMove","canRevokeDefenceOrDodge","canRevokeAttack","canRevokeMove","canInspireCard","cardImageSrc","currentCardIndex","setCurrentCardIndex","isCardShownFullScreen","setIsCardShownFullScreen","activeActivationTokensCount","onHpControlButtonClick","currentCardObj","applySkill","skillName","activationTokenActiveIndex","revokeSkill","toggleCardFullScreen","description","isInspired","cardInspiredName","cardName","cardElements","characters","middle","card","left","actionButton","cardContainer","right","actions","cardFullScreenContainer","cardFullScreenTitle","cardFullScreenImageContainer","cardFullScreenDescription","App","i18n","tw","tf","warBands","currentWarBandFightersIds","currentWarBandFighters","id","includes","changeLanguage","content","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","key","loadGame","localStorage","getItem","dataParsed","JSON","parse","err","saveGame","changeRound","gameSaga","select","setItem","stringify","loadedData","storageManager","put","action","newRoundIndex","all","takeLatest","rootReducer","combineReducers","state","updateItemInArray","array","obj","stateRounds","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","use","HttpApi","LanguageDetector","init","ns","defaultNS","fallbackLng","debug","keySeparator","interpolation","escapeValue","formatSeparator","detection","order","lookupFromPathIndex","caches","cookieMinutes","lookupQuerystring","backend","loadPath","react","wait","i18next","Loading","ReactDOM","StrictMode","I18nextProvider","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.8e166af9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlayField_root__1NBq1\",\"top\":\"PlayField_top__15tpd\",\"buttonChangeRound\":\"PlayField_buttonChangeRound__230Fu\",\"round\":\"PlayField_round__1KHUt\",\"activationTokens\":\"PlayField_activationTokens__3nNgI\",\"statistics\":\"PlayField_statistics__3Y9a7\",\"gloryPointsControls\":\"PlayField_gloryPointsControls__3d-w8\",\"gloryPoints\":\"PlayField_gloryPoints__1g3p2\",\"gloryPoint\":\"PlayField_gloryPoint__3anpN\",\"bottom\":\"PlayField_bottom__39J6I\",\"buttonEndGame\":\"PlayField_buttonEndGame__1GtlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Menu_root__15shr\",\"title\":\"Menu_title__1VVIM\",\"items\":\"Menu_items__3by7Z\",\"item\":\"Menu_item__1zdMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__2-QVb\",\"primary\":\"Button_primary__FZqYg\",\"secondary\":\"Button_secondary__1_JU8\",\"third\":\"Button_third__3rmlg\",\"disabled\":\"Button_disabled__3vE9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ChooseSquad_root__zMTP1\",\"title\":\"ChooseSquad_title__2vmE6\",\"paper\":\"ChooseSquad_paper__1YGzK\",\"items\":\"ChooseSquad_items__5WYYr\",\"bottom\":\"ChooseSquad_bottom__1ijla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GameEnd_root__2h6Qj\",\"title\":\"GameEnd_title__unVR0\",\"statistics\":\"GameEnd_statistics__3iA8j\",\"bottom\":\"GameEnd_bottom__PtfK7\",\"buttonAccept\":\"GameEnd_buttonAccept__wDaSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FighterItem_root__3fYUL\",\"focused\":\"FighterItem_focused__1fytl\",\"imageContainer\":\"FighterItem_imageContainer__2Ytdc\",\"imageFighter\":\"FighterItem_imageFighter__w_NNR\",\"iconOnItem\":\"FighterItem_iconOnItem__19kOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InGameTabs_root__3tNls\",\"button\":\"InGameTabs_button__1jr08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SquadItem_root__1GrLk\",\"focused\":\"SquadItem_focused__1dRd7\",\"imageContainer\":\"SquadItem_imageContainer__34L9E\",\"name\":\"SquadItem_name__3vZRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Icons_root__8nskU\",\"tiny\":\"Icons_tiny__2YyJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__2cDQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ActivationToken_root__18aDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InnerBorderRadiusWrapper_root__zTUsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Scroll_root__2WouV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Cards_root__3RkX3\",\"top\":\"Cards_top__3kvPN\",\"characters\":\"Cards_characters__2jjA-\",\"characterName\":\"Cards_characterName__1fnBW\",\"middle\":\"Cards_middle__aBXFe\",\"card\":\"Cards_card__2X5jI\",\"left\":\"Cards_left__1vuLh\",\"right\":\"Cards_right__1rR5w\",\"cardContainer\":\"Cards_cardContainer__35eFG\",\"actions\":\"Cards_actions__2fDA8\",\"healthPoints\":\"Cards_healthPoints__3gxwV\",\"bottom\":\"Cards_bottom__tFEIU\",\"cardFullScreenContainer\":\"Cards_cardFullScreenContainer__2Fmmf\",\"cardFullScreenImageContainer\":\"Cards_cardFullScreenImageContainer__2vNYv\",\"cardFullScreenTitle\":\"Cards_cardFullScreenTitle__3G8FE\",\"cardFullScreenDescription\":\"Cards_cardFullScreenDescription__1bqgV\"};","import React, {ButtonHTMLAttributes, FC} from 'react'\nimport classes from './Button.module.scss'\nimport classnames from 'classnames'\n\ntype Props = {\n  className?: string\n  theme?: 'primary' | 'secondary' | 'third'\n} & ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button: FC<Props> = ({\n                             className,\n                             theme = 'primary',\n                             ...restProps\n                           }) => {\n  let themeClassName\n\n  if (theme === 'primary') {\n    themeClassName = classes.primary\n  } else if (theme === 'secondary') {\n    themeClassName = classes.secondary\n  } else if (theme === 'third') {\n    themeClassName = classes.third\n  }\n\n  return (\n    <button\n      className={classnames(classes.root, themeClassName, className, {\n        [classes.disabled]: restProps.disabled\n      })}\n      {...restProps}\n    />\n  )\n}\n\nexport default Button","import {InferActionsTypes} from './Store'\n\nconst initialState: SettingsReducerState = {\n  language: \"ru\",\n}\n\nexport const settingsReducer = (state = initialState, action: ActionTypes): SettingsReducerState => {\n  switch (action.type) {\n    case 'SETTINGS-REDUCER/SET-LANGUAGE': {\n      return {\n        ...state,\n        language: action.language\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const settingsActions = {\n  setLanguage: (language: typeof initialState.language) => ({\n    type: 'SETTINGS-REDUCER/SET-LANGUAGE',\n    language\n  } as const),\n}\n\ntype ActionTypes = InferActionsTypes<typeof settingsActions>\n\nexport type SettingsReducerState = {\n  language: \"en\" | \"ru\"\n};","import React from 'react'\nimport * as styles from \"./Menu.module.scss\";\nimport Button from \"../../base/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport {useTranslation} from 'react-i18next'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {settingsActions} from '../../../store/settingsReducer'\n\nconst Menu = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const { language } = useSelector(({settings}) => settings)\n\n  const onButtonToggleLanguageClick = () => {\n    dispatch(settingsActions.setLanguage(\n      (language === 'ru') ? 'en' : 'ru'\n    ))\n  };\n\n  return (\n    <div className={styles.root}>\n      <Button theme=\"secondary\" onClick={onButtonToggleLanguageClick}>{language}</Button>\n      <div className={styles.items}>\n        <div className={styles.title}>{t(\"welcome\")}</div>\n        <Link to={ROUTES.CHOOSE_SQUAD.path} className={styles.item}><Button>{t(\"startGame\")}</Button></Link>\n        <Link to={ROUTES.PLAY_FIELD.path} className={styles.item}><Button>{t(\"continue\")}</Button></Link>\n      </div>\n    </div>\n  )\n};\n\nexport default Menu;","import {ActivationToken, Card} from '../store/gameReducer'\n\nexport const getActiveActivationTokensCount = (activationTokens: ActivationToken[]) => {\n  return getActiveActivationTokens(activationTokens).length;\n};\n\nexport const getActiveActivationTokens = (activationTokens: ActivationToken[] = []) => {\n  return activationTokens.filter(({isActive}) => isActive);\n};\n\nexport const getCardLossesCount = (cards: Card[]) => {\n  return cards.length - weedOutDeadCards(cards).length;\n};\n\nexport const weedOutDeadCards = (cards: Card[]) => {\n  return cards.filter(({healthPoints}) => {\n    return !!healthPoints;\n  });\n};\n\nexport const makePublicUrl = (url: string) => process.env.PUBLIC_URL + url;\nexport const makeImageIconUrl = (name: string) => makePublicUrl(`/images/icons/${name}.png`);\nexport const makeImageFighterUrl = (name: string) => makePublicUrl(`/images/fighters/${name}.png`);\nexport const makeImageWarBandUrl = (name: string) => makePublicUrl(`/images/war-bands/${name}.png`);\nexport const makeImageCardUrl = (name: string, lang: \"en\" | \"ru\") => makePublicUrl(`/images/cards/${lang}/${name}.jpg`);\n","import React from \"react\";\nimport * as styles from \"./SquadItem.module.scss\";\nimport * as classnames from 'classnames'\nimport {makeImageWarBandUrl} from '../../../utils/utils'\n\nconst SquadItem = ({name, color, icon, className = \"\", isFocused, ...restProps}) => {\n  return (\n    <div\n      className={classnames(styles.root, className, {\n        [styles.focused]: isFocused\n      })}\n      {...restProps}\n    >\n      <div style={{backgroundColor: color}} className={styles.imageContainer}>\n        <img src={makeImageWarBandUrl(icon)} alt={name} />\n      </div>\n      {/*<p className={styles.name}>{name}</p>*/}\n    </div>\n  )\n};\n\nexport default SquadItem;","import {InferActionsTypes} from './Store'\nimport {SaveGameType} from '../storage/localStorage'\n\nconst initialState: GameReducerState = {\n  currentRound: 0,\n  currentWarBand: 0,\n  warBand: {\n    fighters: []\n  },\n  rounds: [\n    {\n      activationTokens: [\n        {isActive: true},\n        {isActive: true},\n        {isActive: true},\n        {isActive: true}\n      ],\n      gloryPoints: {\n        wasted: {\n          count: 0\n        },\n        notWasted: {\n          count: 0\n        }\n      }\n    },\n    {\n      activationTokens: [\n        {isActive: true},\n        {isActive: true},\n        {isActive: true},\n        {isActive: true}\n      ],\n      gloryPoints: {\n        wasted: {\n          count: 0\n        },\n        notWasted: {\n          count: 0\n        }\n      }\n    },\n    {\n      activationTokens: [\n        {isActive: true},\n        {isActive: true},\n        {isActive: true},\n        {isActive: true}\n      ],\n      gloryPoints: {\n        wasted: {\n          count: 0\n        },\n        notWasted: {\n          count: 0\n        }\n      }\n    },\n  ],\n  isGameCanBeSaved: false\n}\n\nexport const gameReducer = (state = initialState, action: ActionTypes): GameReducerState => {\n  const updateItemInArray = <T>(array: T[], index: number, newPropertyValues: Partial<T>): T[] => {\n    return array.map((obj: T, i) => {\n      if (i === index) {\n        obj = {\n          ...obj,\n          ...newPropertyValues\n        }\n      }\n\n      return obj\n    })\n  }\n\n  switch (action.type) {\n    case 'GAME-REDUCER/SET-rounds': {\n      return {\n        ...state,\n        rounds: [\n          ...action.rounds\n        ]\n      }\n    }\n    case 'GAME-REDUCER/SET-CURRENT-ROUND-SUCCESS': {\n      return {\n        ...state,\n        currentRound: action.payload\n      }\n    }\n    case 'GAME-REDUCER/SET-FIGHTERS': {\n      return {\n        ...state,\n        warBand: {\n          ...state.warBand,\n          fighters: action.payload\n        }\n      }\n    }\n    case 'GAME-REDUCER/SET-CURRENT-WAR-BAND': {\n      return {\n        ...state,\n        currentWarBand: action.payload\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-ROUND': {\n      const {index, newPropertyValues} = action.data\n\n      return {\n        ...state,\n        rounds: [\n          ...updateItemInArray<Round>(state.rounds, index, newPropertyValues)\n        ]\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-CARD': {\n      const {index, newPropertyValues} = action.data\n      return {\n        ...state,\n        warBand: {\n          ...state.warBand,\n          fighters: [\n            ...updateItemInArray<Card>(state.warBand.fighters, index, newPropertyValues)\n          ]\n        },\n      }\n    }\n    case 'GAME-REDUCER/UPDATE-ACTIVATION-TOKEN': {\n      const {roundIndex, index, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].activationTokens = [\n        ...updateItemInArray<ActivationToken>(stateRounds[roundIndex].activationTokens, index, newPropertyValues)\n      ]\n\n      return {\n        ...state,\n        rounds: stateRounds\n      }\n    }\n    case 'GAME-REDUCER/SET-GLORY-POINTS': {\n      const {roundIndex, newPropertyValues} = action.data\n      const stateRounds = [...state.rounds]\n      stateRounds[roundIndex].gloryPoints = {\n        ...stateRounds[roundIndex].gloryPoints,\n        ...newPropertyValues\n      }\n\n      return {\n        ...state,\n        rounds: stateRounds\n      }\n    }\n    case 'GAME-REDUCER/RESET-GAME': {\n      return {\n        ...initialState\n      }\n    }\n    case 'GAME-REDUCER/LOAD-GAME-SUCCESS': {\n      return {\n        ...initialState,\n        rounds: action.data?.rounds,\n        warBand: action.data?.warBand,\n        currentRound: action.data?.currentRound,\n        isGameCanBeSaved: true\n      }\n    }\n    case 'GAME-REDUCER/RESET-FIGHTERS-SKILLS': {\n      return {\n        ...state,\n        warBand: {\n          ...state.warBand,\n          fighters: state.warBand.fighters.map((item) => ({\n            ...item,\n            [SKILL_NAMES.MOVE]: { applied: false },\n            [SKILL_NAMES.ATTACK]: { applied: false },\n            [SKILL_NAMES.DEFEND]: { applied: false },\n            [SKILL_NAMES.DODGE]: { applied: false },\n          }))\n        }\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const gameActions = {\n  setRounds: (rounds: Round[]) => ({\n    type: 'GAME-REDUCER/SET-rounds',\n    rounds\n  } as const),\n  updateRound: (index: number, newPropertyValues: Partial<Round>) => ({\n    type: 'GAME-REDUCER/UPDATE-ROUND',\n    data: {index, newPropertyValues}\n  } as const),\n  updateCard: (roundIndex: number, index: number, newPropertyValues: Partial<Card>) => ({\n    type: 'GAME-REDUCER/UPDATE-CARD',\n    data: {roundIndex, index, newPropertyValues}\n  } as const),\n  updateActivationToken: (roundIndex: number, index: number, newPropertyValues: Partial<ActivationToken>) => ({\n    type: 'GAME-REDUCER/UPDATE-ACTIVATION-TOKEN',\n    data: {roundIndex, index, newPropertyValues}\n  } as const),\n  setCurrentRoundSuccess: (payload: number) => ({\n    type: 'GAME-REDUCER/SET-CURRENT-ROUND-SUCCESS',\n    payload\n  } as const),\n  setFighters: (payload: Fighters) => ({\n    type: 'GAME-REDUCER/SET-FIGHTERS',\n    payload\n  } as const),\n  setCurrentWarBand: (payload: number) => ({\n    type: 'GAME-REDUCER/SET-CURRENT-WAR-BAND',\n    payload\n  } as const),\n  updateGloryPoints: (roundIndex: number, newPropertyValues: Partial<GloryPoints>) => ({\n    type: 'GAME-REDUCER/SET-GLORY-POINTS',\n    data: {roundIndex, newPropertyValues}\n  } as const),\n  resetGame: () => ({\n    type: 'GAME-REDUCER/RESET-GAME',\n  } as const),\n  loadGame: (data: SaveGameType) => ({\n    type: 'GAME-REDUCER/LOAD-GAME'\n  } as const),\n  loadGameSuccess: (data: SaveGameType) => ({\n    type: 'GAME-REDUCER/LOAD-GAME-SUCCESS',\n    data\n  } as const),\n  saveGame: () => ({\n    type: 'GAME-REDUCER/SAVE-GAME',\n  } as const),\n  resetFightersSkills: () => ({\n    type: 'GAME-REDUCER/RESET-FIGHTERS-SKILLS'\n  } as const),\n  changeRound: (payload: number) => ({\n    type: 'GAME-REDUCER/CHANGE-ROUND',\n    payload\n  } as const),\n}\n\ntype ActionTypes = InferActionsTypes<typeof gameActions>\n\nexport type ActionType = {\n  type: string\n  data: any\n  payload: any\n}\n\nexport type Fighters = Card[]\n\nexport type GameReducerState = {\n  currentRound: number\n  currentWarBand: number\n  warBand: WarBand\n  rounds: Round[]\n  isGameCanBeSaved: boolean\n};\n\nexport type WarBand = {\n  fighters: Fighters\n}\n\nexport type Round = {\n  activationTokens: ActivationToken[]\n  gloryPoints: GloryPoints\n}\n\nexport type ActivationToken = {\n  isActive: boolean\n}\n\nexport const SKILL_NAMES = {\n  MOVE: \"move\",\n  ATTACK: \"attack\",\n  DEFEND: \"defend\",\n  DODGE: \"dodge\"\n} as const\n\nexport type ValueOf<T> = T[keyof T];\nexport type SkillName = ValueOf<typeof SKILL_NAMES>\n\nexport type Card = {\n  healthPoints: number\n  name: string\n  iconName: string\n  cardInspiredName: string\n  cardName: string\n  description: string\n  isInspired: boolean\n  [SKILL_NAMES.MOVE]: Skill\n  [SKILL_NAMES.ATTACK]: Skill\n  [SKILL_NAMES.DEFEND]: Skill\n  [SKILL_NAMES.DODGE]: Skill\n}\n\nexport type GloryPoints = {\n  wasted: {\n    count: number\n  },\n  notWasted: {\n    count: number\n  }\n}\n\nexport type Skill = {\n  applied: boolean\n}","import React, {useEffect, useState} from 'react'\nimport classes from \"./ChooseSquad.module.scss\";\nimport SquadItem from \"../../common/SquadItem/SquadItem\";\nimport Button from \"../../base/Button/Button\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport {useTranslation} from 'react-i18next'\nimport {useDispatch} from 'react-redux'\nimport {gameActions} from '../../../store/gameReducer'\n\nconst ChooseSquad = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const { t: tWarBands } = useTranslation(\"warBands\")\n  const [focusedSquad, setFocusedSquad] = useState(0);\n  const bandItems: any[] = tWarBands(\"items\", { returnObjects: true })\n\n  useEffect(() => {\n    dispatch(gameActions.resetGame())\n  }, [])\n\n  useEffect(() => {\n    // Current war band is set in the App.js useEffect.\n    dispatch(gameActions.setCurrentWarBand(focusedSquad))\n  }, [focusedSquad]);\n\n  const squadElements = bandItems.map(({name, icon, color}, i) => {\n    return <SquadItem\n      name={name}\n      icon={icon}\n      color={color}\n      key={`war-band-${i}`}\n      isFocused={focusedSquad === i}\n      onClick={() => {\n        setFocusedSquad(i);\n      }}\n    />\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{t(\"chooseSquad\")}</div>\n      <div className={classes.paper}>\n        <div className={classes.items}>\n          {squadElements}\n        </div>\n        <div className={classes.bottom}>\n          <Link to={ROUTES.PLAY_FIELD.path}><Button>{t(\"acceptChoose\")}</Button></Link>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default ChooseSquad;","import React from 'react'\nimport * as styles from \"./GameEnd.module.scss\";\nimport Button from \"../../base/Button/Button\";\nimport {ROUTES} from \"../../App\";\nimport {Link} from \"react-router-dom\";\nimport {getCardLossesCount} from '../../../utils/utils'\nimport {useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\n\nconst GameEnd = () => {\n  const { t } = useTranslation()\n  const {\n    rounds,\n  } = useSelector(({game}) => game);\n\n  const cardLossesCount = rounds.reduce((accum, {cards}) => {\n    return accum + getCardLossesCount(cards);\n  }, 0);\n  const gloryPointsWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.wasted.count;\n  }, 0);\n  const gloryPointsNotWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.notWasted.count;\n  }, 0);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{t(\"gameEnd\")}</div>\n      <div className={styles.statistics}>\n        <table>\n          <thead>\n          <tr>\n            <td>{t(\"gloryPointTokens\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{t(\"notWasted\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          <tr>\n            <td>{t(\"wasted\")}</td>\n            <td>{gloryPointsWastedCount}</td>\n          </tr>\n          </tbody>\n          <thead>\n          <tr>\n            <td>{t(\"fightersInTheSquad\")}</td>\n            <td>{gloryPointsNotWastedCount}</td>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{t(\"casualties\")}</td>\n            <td>{cardLossesCount}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className={styles.bottom}>\n        <Link to={ROUTES.MAIN.path}><Button className={styles.buttonAccept}>{t(\"accept\")}</Button></Link>\n      </div>\n    </div>\n  )\n};\n\nexport default GameEnd;","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react'\nimport classes from './Icons.module.scss'\nimport classnames from 'classnames'\nimport {makeImageIconUrl} from '../../utils/utils'\n\ntype ImageButtonProps = {\n  size?: \"tiny\" | undefined\n  srcDisabled?: string\n  srcHover?: string\n  srcDefault: string\n} & DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\nconst ImageButton: FC<ImageButtonProps> = ({\n                                             size,\n                                             srcDisabled,\n                                             srcHover,\n                                             srcDefault,\n                                             className,\n                                             ...restProps\n                                           }) => {\n  let sizeClassName = \"\";\n\n  if (size === \"tiny\") {\n    sizeClassName = classes.tiny\n  }\n\n  return (\n    <button\n      className={classnames(classes.root, className, sizeClassName)}\n      style={{\n        // @ts-ignore\n        '--src-disabled': `url(\"${makeImageIconUrl(srcDisabled || srcDefault)}\")`,\n        '--src-hover': `url(\"${makeImageIconUrl(srcHover || srcDefault)}\")`,\n        '--src-default': `url(\"${makeImageIconUrl(srcDefault)}\")`\n      }}\n      {...restProps}\n    />\n  )\n}\n\nexport default ImageButton","import React from 'react'\nimport * as styles from './InGameTabs.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport {ROUTES} from '../../App'\nimport ImageButton from '../../icons/Icons'\nimport {useLocation} from 'react-router'\n\nconst InGameTabs = () => {\n  const {pathname} = useLocation()\n  return (\n    <div className={styles.root}>\n      <NavLink to={ROUTES.CARDS.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_selected_hero\"\n          srcHover=\"ic_menu_selected_hero_active\"\n          srcDisabled=\"ic_menu_selected_hero_active\"\n          disabled={pathname === ROUTES.CARDS.path}\n        />\n      </NavLink>\n      <NavLink to={ROUTES.PLAY_FIELD.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_game_score\"\n          srcHover=\"ic_menu_game_score_active\"\n          srcDisabled=\"ic_menu_game_score_active\"\n          disabled={pathname === ROUTES.PLAY_FIELD.path}\n        />\n      </NavLink>\n      <NavLink exact to={ROUTES.MAIN.path}>\n        <ImageButton\n          className={styles.button}\n          srcDefault=\"ic_menu_save_and_exit\"\n          disabled={pathname === ROUTES.MAIN.path}\n        />\n      </NavLink>\n    </div>\n  )\n}\n\nexport default InGameTabs","import React from \"react\";\nimport * as styles from \"./ActivationToken.module.scss\";\nimport {makeImageIconUrl, makePublicUrl} from '../../../utils/utils'\nimport * as classnames from 'classnames'\n\nconst ActivationToken = ({className = \"\", isActive = false, ...restProps}) => {\n  let imageUrl, imageAlt\n\n  if (isActive) {\n    imageUrl = makeImageIconUrl('ic_activation_token')\n    imageAlt = \"Activation token active\"\n  } else {\n    imageUrl = makeImageIconUrl('ic_activation_token_spent')\n    imageAlt = \"Activation token spent\"\n  }\n\n  return (\n    <div className={classnames(styles.root, className)} {...restProps}>\n      <img src={imageUrl} alt={imageAlt}/>\n    </div>\n  )\n};\n\nexport default ActivationToken;","import React from \"react\";\nimport * as styles from \"./InnerBorderRadiusWrapper.module.scss\";\nimport * as classnames from 'classnames'\n\nconst InnerBorderRadiusWrapper = ({className, children, ...restProps}) => {\n  return (\n    <div className={classnames(styles.root, className)} {...restProps}>\n        {children}\n    </div>\n  )\n};\n\nexport default InnerBorderRadiusWrapper;","import React from 'react'\nimport styles from \"./PlayField.module.scss\";\nimport {Link} from \"react-router-dom\";\nimport {ROUTES} from \"../../App\";\nimport InGameTabs from \"../../common/InGameTabs/InGameTabs\";\nimport Button from '../../base/Button/Button'\nimport ActivationToken from '../../common/ActivationToken/ActivationToken'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { useTranslation } from 'react-i18next';\nimport InnerBorderRadiusWrapper from '../../base/InnerBorderRadiusWrapper/InnerBorderRadiusWrapper'\nimport {gameActions} from '../../../store/gameReducer'\nimport ImageButton from '../../icons/Icons'\nimport {makeImageIconUrl} from '../../../utils/utils'\n\nconst PlayField = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const {rounds, currentRound} = useSelector(({game}) => game);\n\n  const currentRoundObj = rounds[currentRound];\n  const roundsCount = rounds.length;\n  const activationTokens = currentRoundObj?.activationTokens;\n\n  const canIncreaseRound = currentRound < roundsCount - 1;\n  const canDecreaseRound = currentRound > 0;\n\n  const gloryPointsWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.wasted.count;\n  }, 0);\n  const gloryPointsNotWastedCount = rounds.reduce((accum, {gloryPoints}) => {\n    return accum + gloryPoints.notWasted.count;\n  }, 0);\n\n  const increaseGloryPointsWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        wasted: {\n          count: gloryPointsWastedCount + 1\n        }\n      })\n    );\n  }\n  const decreaseGloryPointsWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        wasted: {\n          count: gloryPointsWastedCount - 1\n        }\n      })\n    );\n  }\n  const increaseGloryPointsNotWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        notWasted: {\n          count: gloryPointsNotWastedCount + 1\n        }\n      })\n    );\n  }\n  const decreaseGloryPointsNotWasted = () => {\n    dispatch(\n      gameActions.updateGloryPoints(currentRound, {\n        notWasted: {\n          count: gloryPointsNotWastedCount - 1\n        }\n      })\n    );\n  }\n\n  console.log(`%c CONSOLE LOG!!!`, 'background: black; color: red;')\n  console.log({currentRound})\n\n  const onGloryPointsWastedClick = () => {\n    if (gloryPointsWastedCount) {\n      decreaseGloryPointsWasted()\n      increaseGloryPointsNotWasted()\n    }\n  };\n\n  const onGloryPointsNotWastedClick = () => {\n    if (gloryPointsNotWastedCount) {\n      decreaseGloryPointsNotWasted()\n      increaseGloryPointsWasted()\n    }\n  };\n\n  const updateGloryPoints = (increase = true) => {\n    if (increase) {\n      increaseGloryPointsNotWasted()\n    } else {\n      decreaseGloryPointsNotWasted()\n    }\n  };\n\n  const updateRound = (increase: boolean) => {\n    if (increase) {\n      if (canIncreaseRound) {\n        dispatch(gameActions.changeRound(currentRound + 1));\n      }\n    } else {\n      if (canDecreaseRound) {\n        dispatch(gameActions.changeRound(currentRound - 1));\n      }\n    }\n  };\n\n  const activationTokenElements = activationTokens?.map(({isActive}, i) => (\n    <ActivationToken\n      onClick={() => {\n        dispatch(gameActions.updateActivationToken(currentRound, i, {\n          isActive: !isActive\n        }))\n      }}\n      key={i}\n      isActive={isActive}\n    />\n  ));\n\n  return (\n    <div className={styles.root}>\n\n      <div className={styles.top}>\n        <ImageButton\n          className={styles.buttonChangeRound}\n          srcDefault=\"ic_previous_round\"\n          srcHover=\"ic_previous_round_pressed\"\n          srcDisabled=\"ic_previous_round_inactive\"\n          disabled={!canDecreaseRound}\n          onClick={() => updateRound(false)}\n        />\n        <InnerBorderRadiusWrapper className={styles.round}>\n          <span>{t(\"round\")} {currentRound + 1}</span>\n        </InnerBorderRadiusWrapper>\n        <ImageButton\n          className={styles.buttonChangeRound}\n          srcDefault=\"ic_next_round\"\n          srcHover=\"ic_next_round_pressed\"\n          srcDisabled=\"ic_next_round_inactive\"\n          disabled={!canIncreaseRound}\n          onClick={() => updateRound(true)}\n        />\n      </div>\n\n      <div className={styles.activationTokens}>\n        {activationTokenElements}\n      </div>\n\n      <div className={styles.statistics}>\n        <div className={styles.gloryPointsControls}>\n          <Button\n            theme=\"secondary\"\n            onClick={() => {\n              updateGloryPoints(true);}\n            }\n          >+</Button>\n          <Button\n            theme=\"secondary\"\n            disabled={!gloryPointsNotWastedCount}\n            onClick={() => {\n              updateGloryPoints(false);}\n            }\n          >-</Button>\n        </div>\n        <div className={styles.gloryPoints}>\n          <Button\n            disabled={!gloryPointsNotWastedCount}\n            className={styles.gloryPoint}\n            onClick={() => {\n              onGloryPointsNotWastedClick();\n            }}\n          >\n            <img\n              src={makeImageIconUrl(\"ic_glory_point\")}\n              alt={`${t(\"gloryPointTokens\")} {t(\"wasted\")}`}\n            />\n            {gloryPointsNotWastedCount}</Button>\n          <Button\n            disabled={!gloryPointsWastedCount}\n            className={styles.gloryPoint}\n            onClick={() => {\n              onGloryPointsWastedClick();\n            }}\n          >\n            <img\n              src={makeImageIconUrl(\"ic_glory_point_spent\")}\n              alt={`${t(\"gloryPointTokens\")} {t(\"notWasted\")}`}\n            />\n            {gloryPointsWastedCount}\n          </Button>\n        </div>\n      </div>\n\n      <div className={styles.bottom}>\n        <Link to={ROUTES.GAME_END.path} className={styles.buttonEndGame}><Button theme=\"third\">{t(\"endGame\")}</Button></Link>\n        <InGameTabs/>\n      </div>\n\n    </div>\n  )\n};\n\nexport default PlayField;","import React, {FC, HTMLAttributes} from 'react'\nimport styles from \"./FighterItem.module.scss\";\nimport classnames from 'classnames'\nimport {makeImageFighterUrl, makeImageIconUrl} from '../../../utils/utils'\nimport {Card} from '../../../store/gameReducer'\n\ntype Props = {\n  item: Card\n  isFocused: boolean\n} & HTMLAttributes<HTMLDivElement>\n\nconst FighterItem:FC<Props> = ({item, className = \"\", isFocused, ...restProps}) => {\n  const {iconName, name, healthPoints, attack, defend, dodge, move} = item;\n  const isDead = healthPoints === 0;\n\n  let iconOnItem\n\n  if (isDead) {\n    iconOnItem = \"ic_fighter_is_dead\"\n  } else if (attack.applied && move.applied) {\n    iconOnItem = \"ic_condition_out_of_actions\"\n  } else if (move.applied && !attack.applied) {\n    iconOnItem = \"ic_moves\"\n  } else if (defend.applied) {\n    iconOnItem = \"ic_action_defense\"\n  } else if (dodge.applied) {\n    iconOnItem = \"ic_action_defense\"\n  }\n\n  return (\n    <div\n      className={classnames(styles.root, className, {\n        [styles.focused]: isFocused\n      })}\n      {...restProps}\n    >\n      <div className={styles.imageContainer}>\n        <img className={styles.imageFighter} src={makeImageFighterUrl(iconName)} alt={name} />\n        {iconOnItem && <img className={styles.iconOnItem} src={makeImageIconUrl(iconOnItem)}/>}\n      </div>\n    </div>\n  )\n};\n\nexport default FighterItem;","import React, {FC, HTMLAttributes} from 'react'\nimport classes from './Scroll.module.scss'\nimport classnames from 'classnames'\n\ntype Props = {\n  className?: string\n} & HTMLAttributes<HTMLDivElement>\n\nconst Scroll: FC<Props> = ({className, ...restProps}) => {\n  return (\n    <div\n      className={classnames(classes.root, className)}\n      {...restProps}\n    />\n  )\n}\n\nexport default Scroll","import React, {useState} from 'react'\nimport classes from './Cards.module.scss'\nimport Button from '../../base/Button/Button'\nimport InGameTabs from '../../common/InGameTabs/InGameTabs'\nimport {getActiveActivationTokens, makeImageCardUrl} from '../../../utils/utils'\nimport {Card, Fighters, gameActions, SKILL_NAMES, SkillName} from '../../../store/gameReducer'\nimport FighterItem from '../../common/FighterItem/FighterItem'\nimport ImageButton from '../../icons/Icons'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Scroll from '../../base/Scroll/Scroll'\n\nconst Cards = () => {\n  const dispatch = useDispatch()\n  const {rounds, currentRound, warBand} = useSelector(({game}) => game)\n  const {language} = useSelector(({settings}) => settings)\n  const [currentCardIndex, setCurrentCardIndex] = useState(0)\n  const [isCardShownFullScreen, setIsCardShownFullScreen] = useState(false)\n\n  const currentRoundObj = rounds[currentRound]\n  const activationTokens = currentRoundObj?.activationTokens\n  const activeActivationTokens = getActiveActivationTokens(activationTokens)\n  const activeActivationTokensCount = activeActivationTokens.length\n\n  const fighters: Fighters = warBand.fighters\n\n  const onHpControlButtonClick = (increase = true) => {\n    const {healthPoints} = currentCardObj\n    if (increase) {\n      dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n        healthPoints: healthPoints + 1\n      }))\n    } else {\n      if (healthPoints) {\n        dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n          healthPoints: healthPoints - 1\n        }))\n      }\n    }\n  }\n\n  const applySkill = (skillName: SkillName) => {\n    if (activeActivationTokensCount) {\n      let activationTokenActiveIndex = -1\n\n      for (let i = activationTokens.length - 1; i >= 0; i--) {\n        if (activationTokens[i].isActive) {\n          activationTokenActiveIndex = i\n          break\n        }\n      }\n\n      if (activationTokenActiveIndex !== -1) {\n        dispatch(gameActions.updateActivationToken(\n          currentRound,\n          activationTokenActiveIndex,\n          {isActive: false})\n        )\n        dispatch(gameActions.updateCard(currentRound, currentCardIndex, {\n          [skillName]: {\n            applied: true\n          }\n        }))\n      }\n    }\n  }\n  const revokeSkill = (skillName: SkillName) => {\n    dispatch(\n      gameActions.updateCard(currentRound, currentCardIndex, {\n        [skillName]: false\n      })\n    )\n  }\n\n  const setCurrentCardInspireStatus = (flag: boolean) => {\n    dispatch(\n      gameActions.updateCard(currentRound, currentCardIndex, {\n        isInspired: flag\n      })\n    )\n  }\n\n  const toggleCardFullScreen = () => {\n    setIsCardShownFullScreen(!isCardShownFullScreen)\n  }\n\n  const currentCardObj: Card = fighters[currentCardIndex]\n  let canApplyDefenceOrDodge\n  let canApplyMoveAndAttack\n  let canApplyMove\n  let canRevokeDefenceOrDodge\n  let canRevokeAttack\n  let canRevokeMove\n  let canInspireCard\n  let cardImageSrc\n  let name = \"\"\n  let description = \"\"\n  let isInspired = false\n\n  if (currentCardObj) {\n    const {move, attack, defend, dodge } = currentCardObj\n\n    canApplyDefenceOrDodge = activeActivationTokensCount && !defend.applied\n      && !dodge.applied && !attack.applied && !move.applied\n    canApplyMoveAndAttack = activeActivationTokensCount && !attack.applied && !move.applied\n    canApplyMove = activeActivationTokensCount && !attack.applied && !move.applied\n    canRevokeDefenceOrDodge = defend.applied && dodge.applied\n    canRevokeAttack = attack.applied\n    canRevokeMove = move.applied\n    canInspireCard = currentCardObj.cardInspiredName !== \"none\";\n\n    name = currentCardObj.name\n    description = currentCardObj.description\n    isInspired = currentCardObj.isInspired\n\n    if (isInspired) {\n      cardImageSrc = makeImageCardUrl(currentCardObj.cardInspiredName, language)\n    } else {\n      cardImageSrc = makeImageCardUrl(currentCardObj.cardName, language)\n    }\n  }\n  \n  const cardElements = fighters.map((item: Card, i: number) => {\n    return <FighterItem\n      item={item}\n      key={`fighter-${i}`}\n      isFocused={currentCardIndex === i}\n      onClick={() => {\n        setCurrentCardIndex(i)\n      }}\n    />\n  })\n\n  return (\n    <div className={classes.root}>\n\n      <div className={classes.top}>\n        <div className={classes.characters}>\n          {cardElements}\n        </div>\n      </div>\n\n      <div className={classes.middle}>\n        {\n          (currentCardObj)\n            ? <>\n              <div className={classes.card}>\n                <div className={classes.left}>\n                  <Button theme=\"secondary\" disabled={!canInspireCard} onClick={() => {\n                    setCurrentCardInspireStatus(!isInspired)\n                  }}>\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      disabled={!canInspireCard}\n                      srcDisabled=\"ic_condition_inspired_inactive\"\n                      srcDefault={\n                        (isInspired)\n                          ? \"ic_condition_inspired_active\"\n                          : \"ic_condition_inspired\"\n                      }\n                    />\n                  </Button>\n                  <Button theme=\"secondary\"\n                          disabled={!canRevokeMove && !canRevokeAttack}\n                          onClick={() => {\n                            revokeSkill(SKILL_NAMES.MOVE)\n                            revokeSkill(SKILL_NAMES.ATTACK)\n                          }}\n                  >\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault={\n                        (canRevokeMove && canRevokeAttack)\n                          ? 'ic_condition_out_of_actions_active'\n                          : 'ic_condition_out_of_moves_active'}\n                      srcDisabled=\"ic_condition_out_of_actions\"\n                      disabled={!canRevokeMove && !canRevokeAttack}\n                    />\n                  </Button>\n                  <Button theme=\"secondary\"\n                          disabled={!canRevokeDefenceOrDodge}\n                          onClick={() => {\n                            revokeSkill(SKILL_NAMES.DEFEND)\n                            revokeSkill(SKILL_NAMES.DODGE)\n                          }}\n                  >\n                    <ImageButton\n                      size=\"tiny\"\n                      className={classes.actionButton}\n                      srcDefault=\"ic_condition_on_defensive_active\"\n                      srcDisabled=\"ic_condition_on_defensive\"\n                      disabled={!canRevokeDefenceOrDodge}\n                    />\n                  </Button>\n                </div>\n                <div className={classes.cardContainer}>\n                  <img onClick={toggleCardFullScreen} src={cardImageSrc} alt={name}/>\n                </div>\n                <div className={classes.right}>\n                  <Button\n                    onClick={() => {\n                      onHpControlButtonClick(true)\n                    }}\n                    theme=\"secondary\"\n                  >+</Button>\n                  <div className={classes.healthPoints}>{currentCardObj.healthPoints}</div>\n                  <Button\n                    disabled={!currentCardObj.healthPoints}\n                    onClick={() => {\n                      onHpControlButtonClick(false)\n                    }}\n                    theme=\"secondary\"\n                  >-</Button>\n                </div>\n              </div>\n              <div className={classes.actions}>\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_action_defense\"\n                  srcDisabled=\"ic_activation_is_forbidden\"\n                  disabled={!canApplyDefenceOrDodge}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.DEFEND)\n                    applySkill(SKILL_NAMES.DODGE)\n                  }}\n                />\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_condition_out_of_actions\"\n                  srcDisabled=\"ic_action_attack_forbidden\"\n                  disabled={!canApplyMoveAndAttack}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.MOVE)\n                    applySkill(SKILL_NAMES.ATTACK)\n                  }}\n                />\n                <ImageButton\n                  className={classes.actionButton}\n                  srcDefault=\"ic_moves\"\n                  srcDisabled=\"ic_action_movement\"\n                  disabled={!canApplyMove}\n                  onClick={() => {\n                    applySkill(SKILL_NAMES.MOVE)\n                  }}\n                />\n              </div>\n            </>\n            : ''\n        }\n      </div>\n\n      <div className={classes.bottom}>\n        <InGameTabs/>\n      </div>\n\n      {\n        (isCardShownFullScreen)\n          ? (\n            <div className={classes.cardFullScreenContainer}>\n              <div className={classes.cardFullScreenTitle}>{name}</div>\n              <div className={classes.cardFullScreenImageContainer}>\n                <img onClick={toggleCardFullScreen} src={cardImageSrc} alt={name}/>\n              </div>\n              <Scroll>\n                <p className={classes.cardFullScreenDescription}>{description}</p>\n              </Scroll>\n            </div>\n          )\n          : ''\n      }\n    </div>\n  )\n}\n\nexport default Cards\n\nexport type WarBand = {\n  name: string\n  icon: string\n  description: string\n  fighters: number[]\n}\n\nexport type Fighter = {\n  name: string\n  fighters: number[]\n  iconName: string\n  cardName: string\n  description: string\n  cardInspiredName: string\n  descriptionInspired: string\n  healthPoints: number\n  defenceStyle: string\n  movementDistance: number\n  defenceValue: number\n  nameInspired: string\n  movementDistanceInspired: number\n  defenceValueInspired: number\n  id: number\n}","import React, {useEffect} from 'react'\nimport classes from './App.module.scss'\nimport Menu from './views/Menu/Menu'\nimport ChooseSquad from './views/ChooseSquad/ChooseSquad'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport GameEnd from './views/GameEnd/GameEnd'\nimport PlayField from './views/PlayField/PlayField'\nimport Cards, {Fighter, WarBand} from './views/Cards/Cards'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {useTranslation} from 'react-i18next'\nimport {gameActions} from '../store/gameReducer'\n\nexport const ROUTES = {\n  MAIN: {\n    path: '/'\n  },\n  CHOOSE_SQUAD: {\n    path: '/choose-squad'\n  },\n  GAME_END: {\n    path: '/game-end'\n  },\n  PLAY_FIELD: {\n    path: '/play-field'\n  },\n  CARDS: {\n    path: '/cards'\n  }\n}\n\nfunction App() {\n  const dispatch = useDispatch()\n  const {i18n} = useTranslation()\n  const { t: tw } = useTranslation(\"warBands\")\n  const { t: tf } = useTranslation(\"fighters\")\n  const warBands: WarBand[] = tw(\"items\", { returnObjects: true })\n  const fighters: Fighter[] = tf(\"items\", { returnObjects: true })\n  const {language} = useSelector(({settings}) => settings)\n\n  // Get fighters of the current war band.\n  const {currentWarBand: currentWarBandIndex} = useSelector(({game}) => game)\n  const currentWarBand = warBands[currentWarBandIndex];\n  const currentWarBandFightersIds = currentWarBand.fighters;\n  const currentWarBandFighters = fighters.filter(({id}) => {\n    return currentWarBandFightersIds.includes(id)\n  })\n  // ========\n\n  useEffect(() => {\n    // Set chosen war band fighters from the json to the Redux.\n    dispatch(gameActions.setFighters(currentWarBandFighters.map(({id,\n                                                                   name,\n                                                                   healthPoints,\n                                                                   iconName,\n                                                                   cardInspiredName,\n                                                                   cardName,\n                                                                   description}) => {\n      return  {\n        id,\n        name,\n        healthPoints,\n        iconName,\n        cardInspiredName,\n        cardName,\n        description,\n        isInspired: false,\n        move: {applied: false},\n        attack: {applied: false},\n        defend: {applied: false},\n        dodge: {applied: false}\n      }\n    })))\n\n  }, [currentWarBand])\n\n  useEffect(() => {\n    i18n.changeLanguage(language)\n  }, [language])\n\n  return (\n    <Router>\n      <div className={classes.content}>\n        <Switch>\n          <Route path={ROUTES.CARDS.path} render={() => <Cards/>}/>\n          <Route path={ROUTES.CHOOSE_SQUAD.path} render={() => <ChooseSquad/>}/>\n          <Route path={ROUTES.GAME_END.path} render={() => <GameEnd/>}/>\n          <Route path={ROUTES.PLAY_FIELD.path} render={() => <PlayField/>}/>\n          <Route exact path={ROUTES.MAIN.path} render={() => <Menu/>}/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Round, WarBand} from '../store/gameReducer'\n\nconst key = 'GAME/COMMON-DATA'\n\nexport type SaveGameType = {\n  currentRound: number\n  currentWarBand: number\n  warBand: WarBand\n  rounds: Round[]\n}\n\nexport const saveGame = (data: SaveGameType) => {\n  localStorage.setItem(key, JSON.stringify(data))\n}\n\n// @ts-ignore\nexport const loadGame = (): SaveGameType | null => {\n  const data = localStorage.getItem(key)\n  let dataParsed = null\n\n  if (data) {\n    try {\n      dataParsed = JSON.parse(data)\n    } catch(err) {}\n  }\n\n  return dataParsed\n}","import { all, takeLatest, select, put } from 'redux-saga/effects'\nimport * as storageManager from '../storage/localStorage'\nimport {ActionType, gameActions} from './gameReducer'\n\nfunction* saveGame () {\n  const {rounds, currentWarBand, currentRound, warBand} = yield select(({game}) => game);\n  storageManager.saveGame({\n    rounds,\n    currentRound,\n    currentWarBand,\n    warBand\n  });\n  console.log(\"game saved\", {\n    rounds,\n    currentRound,\n    currentWarBand\n  });\n}\n\nfunction* loadGame () {\n  const loadedData = storageManager.loadGame();\n\n  if (loadedData) {\n    yield put(gameActions.loadGameSuccess(loadedData))\n    console.log(\"game loaded\", loadedData)\n  }\n}\n\nfunction* changeRound (action: ActionType) {\n  const newRoundIndex = action.payload;\n\n  yield put(gameActions.setCurrentRoundSuccess(newRoundIndex));\n  yield put(gameActions.resetFightersSkills());\n}\n\nexport default function* gameSaga() {\n  yield all([\n    takeLatest('GAME-REDUCER/SAVE-GAME', saveGame),\n    takeLatest('GAME-REDUCER/LOAD-GAME', loadGame),\n\n    takeLatest('GAME-REDUCER/SET-rounds', saveGame),\n    takeLatest('GAME-REDUCER/UPDATE-ROUND', saveGame),\n    takeLatest('GAME-REDUCER/UPDATE-CARD', saveGame),\n    takeLatest('GAME-REDUCER/UPDATE-ACTIVATION-TOKEN', saveGame),\n    takeLatest('GAME-REDUCER/SET-CURRENT-ROUND', saveGame),\n    takeLatest('GAME-REDUCER/SET-CURRENT-WAR-BAND', saveGame),\n    takeLatest('GAME-REDUCER/SET-GLORY-POINTS', saveGame),\n\n    takeLatest('GAME-REDUCER/CHANGE-ROUND', changeRound),\n  ])\n};","import {applyMiddleware, combineReducers, compose, createStore, Dispatch} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport {gameReducer} from './gameReducer'\nimport {settingsReducer} from './settingsReducer'\nimport gameSaga from './saga'\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  settings: settingsReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nconst composeEnhancers = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  trace: true,\n  traceLimit: 25\n})) || compose\n\nlet sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n))\n\nsagaMiddleware.run(gameSaga)\n\n// Infer actions object to get types of actions\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\nexport type ThunkType = (...args: any) => (dispatch: Dispatch) => Promise<void>","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport HttpApi from \"i18next-http-backend\";\nimport i18next from 'i18next'\nimport {makePublicUrl} from '../utils/utils'\n\n//https://docs.google.com/spreadsheets/d/1BbBGR326YDnC5BESDWaWPgZxARCDQTPyFLrbusOGOgI/edit?usp=sharing\n\ni18n.use(HttpApi).use(LanguageDetector).init({\n  ns: ['common', 'warBands', 'fighters'],\n  defaultNS: 'common',\n  fallbackLng: \"ru\",\n  debug: false,\n  keySeparator: false, // we use content as keys\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: \",\"\n  },\n  detection: {\n    order: [\"cookie\", \"navigator\", \"path\", \"localStorage\", \"subdomain\", \"queryString\", \"htmlTag\"],\n    lookupFromPathIndex: 0,\n    caches: [\"cookie\"],\n    cookieMinutes: 10000000,\n    lookupQuerystring: \"i18next\"\n  },\n  backend: {\n    loadPath: makePublicUrl(\"/locales/{{lng}}/{{ns}}.json\"),\n  },\n  react: {\n    wait: false\n  }\n}, (err, t) => {\n  i18next.t('myKey'); // key in moduleA namespace (defined default)\n  i18next.t('common:myKey'); // key in common namespace\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.scss\";\nimport { Provider } from 'react-redux'\nimport {store} from './store/Store'\nimport i18n from \"./i18n/i18n\";\nimport {I18nextProvider} from 'react-i18next'\nimport { Suspense } from 'react';\n\nconst Loading = () => {\n  return <div>Loading...</div>\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18n}>\n      <Suspense fallback={<Loading/>}>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </Suspense>\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}